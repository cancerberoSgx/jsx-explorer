{"version":3,"sources":["../node_modules/monaco-editor/esm/vs/language/json/workerManager.js","../node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-languageserver-types/main.js","../node_modules/monaco-editor/esm/vs/language/json/languageFeatures.js","../node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/impl/scanner.js","../node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/impl/format.js","../node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/impl/parser.js","../node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/impl/edit.js","../node_modules/monaco-editor/esm/vs/language/json/_deps/jsonc-parser/main.js","../node_modules/monaco-editor/esm/vs/language/json/tokenization.js","../node_modules/monaco-editor/esm/vs/language/json/jsonMode.js"],"names":["STOP_WHEN_IDLE_FOR","WorkerManager","defaults","_this","_defaults","_worker","_idleCheckInterval","setInterval","_checkIfIdle","_lastUsedTime","_configChangeListener","onDidChange","_stopWorker","prototype","dispose","_client","clearInterval","Date","now","_getClient","monaco","editor","createWebWorker","moduleId","label","languageId","createData","languageSettings","diagnosticsOptions","enableSchemaRequest","getProxy","getLanguageServiceWorker","resources","_i","arguments","length","then","client","_","withSyncedResources","Position","Range","Location","Color","ColorInformation","ColorPresentation","FoldingRangeKind","FoldingRange","DiagnosticRelatedInformation","DiagnosticSeverity","Diagnostic","Command","TextEdit","TextDocumentEdit","WorkspaceEdit","create","line","character","is","value","candidate","Is","objectLiteral","number","one","two","three","four","start","end","Error","uri","range","defined","string","undefined","red","green","blue","alpha","color","textEdit","additionalTextEdits","typedArray","startLine","endLine","startCharacter","endCharacter","kind","result","location","message","Warning","Information","Hint","severity","code","source","relatedInformation","title","command","args","replace","newText","insert","position","del","textDocument","edits","VersionedTextDocumentIdentifier","Array","isArray","changes","documentChanges","TextDocumentIdentifier","TextDocumentItem","MarkupKind","MarkupContent","CompletionItemKind","InsertTextFormat","CompletionItem","CompletionList","MarkedString","Hover","ParameterInformation","SignatureInformation","DocumentHighlightKind","DocumentHighlight","SymbolKind","SymbolInformation","TextEditChangeImpl","push","delete","add","edit","all","clear","splice","WorkspaceChange","workspaceEdit","_textEditChanges","Object","_workspaceEdit","forEach","textDocumentEdit","textEditChange","keys","key","defineProperty","get","enumerable","configurable","getTextEditChange","version","text","PlainText","Markdown","Text","Method","Function","Constructor","Field","Variable","Class","Interface","Module","Property","Unit","Value","Enum","Keyword","Snippet","File","Reference","Folder","EnumMember","Constant","Struct","Event","Operator","TypeParameter","items","isIncomplete","fromPlainText","plainText","language","contents","documentation","parameters","Read","Write","Namespace","Package","String","Number","Boolean","Key","Null","name","containerName","CodeActionKind","CodeActionContext","CodeAction","CodeLens","FormattingOptions","DocumentSymbol","detail","selectionRange","children","deprecated","boolean","QuickFix","Refactor","RefactorExtract","RefactorInline","RefactorRewrite","Source","SourceOrganizeImports","diagnostics","only","commandOrEdit","data","tabSize","insertSpaces","DocumentLink","target","TextDocument","TextDocumentSaveReason","EOL","content","FullTextDocument","lineCount","func","getText","positionAt","offsetAt","applyEdits","document","sortedEdits","mergeSort","compare","p","left","slice","right","leftIdx","rightIdx","i","ret","a","b","diff","lastModifiedOffset","e","startOffset","endOffset","substring","Manual","AfterDelay","FocusOut","_uri","_languageId","_version","_content","_lineOffsets","update","event","getLineOffsets","lineOffsets","isLineStart","ch","charAt","offset","Math","max","min","low","high","mid","floor","lineOffset","nextLineOffset","toString","call","check","every","Uri","DiagnosticsAdapter","_disposables","_listener","onModelAdd","model","modeId","handle","getModeId","onDidChangeContent","clearTimeout","setTimeout","_doValidate","onModelRemoved","setModelMarkers","uriStr","listener","onDidCreateModel","onWillDisposeModel","_resetSchema","onDidChangeModelLanguage","getModels","d","resource","worker","resetSchema","doValidation","markers","map","toDiagnostics","getModel","err","console","error","toSeverity","lsSeverity","ls","MarkerSeverity","Info","diag","startLineNumber","startColumn","endLineNumber","endColumn","fromPosition","column","lineNumber","fromRange","toRange","toCompletionItemKind","mItemKind","languages","fromCompletionItemKind","toTextEdit","CompletionAdapter","provideCompletionItems","context","token","getWordUntilPosition","wordInfo","doComplete","info","entry","item","insertText","sortText","filterText","insertTextFormat","insertTextRules","CompletionItemInsertTextRule","InsertAsSnippet","suggestions","isMarkupContent","thing","toMarkdownString","toMarkedStringArray","HoverAdapter","provideHover","doHover","toLocation","parse","toSymbolKind","mKind","DocumentSymbolAdapter","provideDocumentSymbols","findDocumentSymbols","fromFormattingOptions","options","DocumentFormattingEditProvider","provideDocumentFormattingEdits","format","DocumentRangeFormattingEditProvider","provideDocumentRangeFormattingEdits","DocumentColorAdapter","provideDocumentColors","findDocumentColors","infos","provideColorPresentations","getColorPresentations","presentations","presentation","FoldingRangeAdapter","provideFoldingRanges","ranges","toFoldingRangeKind","Comment","Imports","Region","createScanner","ignoreTrivia","pos","len","tokenOffset","scanError","scanHexDigits","count","exact","digits","charCodeAt","scanNext","isWhiteSpace","fromCharCode","isLineBreak","scanString","ch_1","commentClosed","isDigit","scanNumber","isUnknownContentCharacter","setPosition","newPosition","getPosition","scan","scanNextNonTrivia","getToken","getTokenValue","getTokenOffset","getTokenLength","getTokenError","documentText","initialIndentLevel","formatText","formatTextStart","rangeStart","rangeEnd","isEOL","computeIndentLevel","eol","indentValue","getEOL","lineBreak","indentLevel","repeat","scanner","hasError","newLineAndIndent","editOperations","addEdit","firstToken","firstTokenStart","firstTokenEnd","secondToken","replaceContent","s","nChars","indexOf","getLocation","segments","earlyReturnException","previousNode","previousNodeInst","type","parent","isAtPropertyKey","setPreviousNode","colonOffset","visit","onObjectBegin","onObjectProperty","onObjectEnd","pop","onArrayBegin","onArrayEnd","onLiteralValue","getLiteralNodeType","onSeparator","sep","last","path","matches","pattern","k","errors","currentProperty","currentParent","previousParents","onValue","object","array","onError","parseTree","ensurePropertyComplete","valueNode","findNodeAtLocation","root","node","path_1","segment","found","_a","_b","propertyNode","index","getNodePath","getNodeValue","obj","prop","contains","includeRightBound","findNodeAtOffset","visitor","_scanner","toNoArgVisit","visitFunction","toOneArgVisit","arg","onComment","disallowComments","allowTrailingComma","handleError","skipUntilAfter","skipUntil","parseString","isValue","parseValue","parseArray","needsComma","parseObject","parseLiteral","JSON","stripComments","replaceCh","parts","join","removeProperty","formattingOptions","setProperty","originalPath","getInsertionIndex","lastSegment","existing","propertyIndex","removeBegin","removeEnd","previous","withFormatting","stringify","newProperty","insertIndex","removalIndex","toRemove","applyEdit","begin","edit_1","isWS","parser","formatter","modify","createTokenizationSupport","supportComments","getInitialState","JSONState","tokenize","state","offsetDelta","stopAtOffset","TOKEN_DELIM_OBJECT","TOKEN_DELIM_ARRAY","TOKEN_DELIM_COLON","TOKEN_DELIM_COMMA","TOKEN_VALUE_BOOLEAN","TOKEN_VALUE_NULL","TOKEN_VALUE_STRING","TOKEN_VALUE_NUMBER","TOKEN_PROPERTY_NAME","TOKEN_COMMENT_BLOCK","TOKEN_COMMENT_LINE","lastWasColon","_state","clone","equals","other","getStateData","setStateData","comments","numberOfInsertedCharacters","adjustOffset","json","tokens","endState","substr","startIndex","scopes","setupMode","disposables","uris","apply","registerCompletionItemProvider","languageFeatures","registerHoverProvider","registerDocumentSymbolProvider","registerDocumentFormattingEditProvider","registerDocumentRangeFormattingEditProvider","setTokensProvider","setLanguageConfiguration","richEditConfiguration","registerColorProvider","registerFoldingRangeProvider","wordPattern","lineComment","blockComment","brackets","autoClosingPairs","open","close","notIn"],"mappings":"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","file":"jsonMode.7442f256.js","sourceRoot":"../src","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nvar STOP_WHEN_IDLE_FOR = 2 * 60 * 1000; // 2min\r\nvar WorkerManager = /** @class */ (function () {\r\n    function WorkerManager(defaults) {\r\n        var _this = this;\r\n        this._defaults = defaults;\r\n        this._worker = null;\r\n        this._idleCheckInterval = setInterval(function () { return _this._checkIfIdle(); }, 30 * 1000);\r\n        this._lastUsedTime = 0;\r\n        this._configChangeListener = this._defaults.onDidChange(function () { return _this._stopWorker(); });\r\n    }\r\n    WorkerManager.prototype._stopWorker = function () {\r\n        if (this._worker) {\r\n            this._worker.dispose();\r\n            this._worker = null;\r\n        }\r\n        this._client = null;\r\n    };\r\n    WorkerManager.prototype.dispose = function () {\r\n        clearInterval(this._idleCheckInterval);\r\n        this._configChangeListener.dispose();\r\n        this._stopWorker();\r\n    };\r\n    WorkerManager.prototype._checkIfIdle = function () {\r\n        if (!this._worker) {\r\n            return;\r\n        }\r\n        var timePassedSinceLastUsed = Date.now() - this._lastUsedTime;\r\n        if (timePassedSinceLastUsed > STOP_WHEN_IDLE_FOR) {\r\n            this._stopWorker();\r\n        }\r\n    };\r\n    WorkerManager.prototype._getClient = function () {\r\n        this._lastUsedTime = Date.now();\r\n        if (!this._client) {\r\n            this._worker = monaco.editor.createWebWorker({\r\n                // module that exports the create() method and returns a `JSONWorker` instance\r\n                moduleId: 'vs/language/json/jsonWorker',\r\n                label: this._defaults.languageId,\r\n                // passed in to the create() method\r\n                createData: {\r\n                    languageSettings: this._defaults.diagnosticsOptions,\r\n                    languageId: this._defaults.languageId,\r\n                    enableSchemaRequest: this._defaults.diagnosticsOptions.enableSchemaRequest\r\n                }\r\n            });\r\n            this._client = this._worker.getProxy();\r\n        }\r\n        return this._client;\r\n    };\r\n    WorkerManager.prototype.getLanguageServiceWorker = function () {\r\n        var _this = this;\r\n        var resources = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            resources[_i] = arguments[_i];\r\n        }\r\n        var _client;\r\n        return this._getClient().then(function (client) {\r\n            _client = client;\r\n        }).then(function (_) {\r\n            return _this._worker.withSyncedResources(resources);\r\n        }).then(function (_) { return _client; });\r\n    };\r\n    return WorkerManager;\r\n}());\r\nexport { WorkerManager };\r\n","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\n/**\n * The Position namespace provides helper functions to work with\n * [Position](#Position) literals.\n */\nexport var Position;\n(function (Position) {\n    /**\n     * Creates a new Position literal from the given line and character.\n     * @param line The position's line.\n     * @param character The position's character.\n     */\n    function create(line, character) {\n        return { line: line, character: character };\n    }\n    Position.create = create;\n    /**\n     * Checks whether the given liternal conforms to the [Position](#Position) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.objectLiteral(candidate) && Is.number(candidate.line) && Is.number(candidate.character);\n    }\n    Position.is = is;\n})(Position || (Position = {}));\n/**\n * The Range namespace provides helper functions to work with\n * [Range](#Range) literals.\n */\nexport var Range;\n(function (Range) {\n    function create(one, two, three, four) {\n        if (Is.number(one) && Is.number(two) && Is.number(three) && Is.number(four)) {\n            return { start: Position.create(one, two), end: Position.create(three, four) };\n        }\n        else if (Position.is(one) && Position.is(two)) {\n            return { start: one, end: two };\n        }\n        else {\n            throw new Error(\"Range#create called with invalid arguments[\" + one + \", \" + two + \", \" + three + \", \" + four + \"]\");\n        }\n    }\n    Range.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Range](#Range) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\n    }\n    Range.is = is;\n})(Range || (Range = {}));\n/**\n * The Location namespace provides helper functions to work with\n * [Location](#Location) literals.\n */\nexport var Location;\n(function (Location) {\n    /**\n     * Creates a Location literal.\n     * @param uri The location's uri.\n     * @param range The location's range.\n     */\n    function create(uri, range) {\n        return { uri: uri, range: range };\n    }\n    Location.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Location](#Location) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\n    }\n    Location.is = is;\n})(Location || (Location = {}));\n/**\n * The Color namespace provides helper functions to work with\n * [Color](#Color) literals.\n */\nexport var Color;\n(function (Color) {\n    /**\n     * Creates a new Color literal.\n     */\n    function create(red, green, blue, alpha) {\n        return {\n            red: red,\n            green: green,\n            blue: blue,\n            alpha: alpha,\n        };\n    }\n    Color.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Color](#Color) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.number(candidate.red)\n            && Is.number(candidate.green)\n            && Is.number(candidate.blue)\n            && Is.number(candidate.alpha);\n    }\n    Color.is = is;\n})(Color || (Color = {}));\n/**\n * The ColorInformation namespace provides helper functions to work with\n * [ColorInformation](#ColorInformation) literals.\n */\nexport var ColorInformation;\n(function (ColorInformation) {\n    /**\n     * Creates a new ColorInformation literal.\n     */\n    function create(range, color) {\n        return {\n            range: range,\n            color: color,\n        };\n    }\n    ColorInformation.create = create;\n    /**\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Range.is(candidate.range) && Color.is(candidate.color);\n    }\n    ColorInformation.is = is;\n})(ColorInformation || (ColorInformation = {}));\n/**\n * The Color namespace provides helper functions to work with\n * [ColorPresentation](#ColorPresentation) literals.\n */\nexport var ColorPresentation;\n(function (ColorPresentation) {\n    /**\n     * Creates a new ColorInformation literal.\n     */\n    function create(label, textEdit, additionalTextEdits) {\n        return {\n            label: label,\n            textEdit: textEdit,\n            additionalTextEdits: additionalTextEdits,\n        };\n    }\n    ColorPresentation.create = create;\n    /**\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.string(candidate.label)\n            && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate))\n            && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\n    }\n    ColorPresentation.is = is;\n})(ColorPresentation || (ColorPresentation = {}));\n/**\n * Enum of known range kinds\n */\nexport var FoldingRangeKind;\n(function (FoldingRangeKind) {\n    /**\n     * Folding range for a comment\n     */\n    FoldingRangeKind[\"Comment\"] = \"comment\";\n    /**\n     * Folding range for a imports or includes\n     */\n    FoldingRangeKind[\"Imports\"] = \"imports\";\n    /**\n     * Folding range for a region (e.g. `#region`)\n     */\n    FoldingRangeKind[\"Region\"] = \"region\";\n})(FoldingRangeKind || (FoldingRangeKind = {}));\n/**\n * The folding range namespace provides helper functions to work with\n * [FoldingRange](#FoldingRange) literals.\n */\nexport var FoldingRange;\n(function (FoldingRange) {\n    /**\n     * Creates a new FoldingRange literal.\n     */\n    function create(startLine, endLine, startCharacter, endCharacter, kind) {\n        var result = {\n            startLine: startLine,\n            endLine: endLine\n        };\n        if (Is.defined(startCharacter)) {\n            result.startCharacter = startCharacter;\n        }\n        if (Is.defined(endCharacter)) {\n            result.endCharacter = endCharacter;\n        }\n        if (Is.defined(kind)) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    FoldingRange.create = create;\n    /**\n     * Checks whether the given literal conforms to the [FoldingRange](#FoldingRange) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.number(candidate.startLine) && Is.number(candidate.startLine)\n            && (Is.undefined(candidate.startCharacter) || Is.number(candidate.startCharacter))\n            && (Is.undefined(candidate.endCharacter) || Is.number(candidate.endCharacter))\n            && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\n    }\n    FoldingRange.is = is;\n})(FoldingRange || (FoldingRange = {}));\n/**\n * The DiagnosticRelatedInformation namespace provides helper functions to work with\n * [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) literals.\n */\nexport var DiagnosticRelatedInformation;\n(function (DiagnosticRelatedInformation) {\n    /**\n     * Creates a new DiagnosticRelatedInformation literal.\n     */\n    function create(location, message) {\n        return {\n            location: location,\n            message: message\n        };\n    }\n    DiagnosticRelatedInformation.create = create;\n    /**\n     * Checks whether the given literal conforms to the [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\n    }\n    DiagnosticRelatedInformation.is = is;\n})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));\n/**\n * The diagnostic's severity.\n */\nexport var DiagnosticSeverity;\n(function (DiagnosticSeverity) {\n    /**\n     * Reports an error.\n     */\n    DiagnosticSeverity.Error = 1;\n    /**\n     * Reports a warning.\n     */\n    DiagnosticSeverity.Warning = 2;\n    /**\n     * Reports an information.\n     */\n    DiagnosticSeverity.Information = 3;\n    /**\n     * Reports a hint.\n     */\n    DiagnosticSeverity.Hint = 4;\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\n/**\n * The Diagnostic namespace provides helper functions to work with\n * [Diagnostic](#Diagnostic) literals.\n */\nexport var Diagnostic;\n(function (Diagnostic) {\n    /**\n     * Creates a new Diagnostic literal.\n     */\n    function create(range, message, severity, code, source, relatedInformation) {\n        var result = { range: range, message: message };\n        if (Is.defined(severity)) {\n            result.severity = severity;\n        }\n        if (Is.defined(code)) {\n            result.code = code;\n        }\n        if (Is.defined(source)) {\n            result.source = source;\n        }\n        if (Is.defined(relatedInformation)) {\n            result.relatedInformation = relatedInformation;\n        }\n        return result;\n    }\n    Diagnostic.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Diagnostic](#Diagnostic) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate)\n            && Range.is(candidate.range)\n            && Is.string(candidate.message)\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\n            && (Is.number(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\n            && (Is.string(candidate.source) || Is.undefined(candidate.source))\n            && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\n    }\n    Diagnostic.is = is;\n})(Diagnostic || (Diagnostic = {}));\n/**\n * The Command namespace provides helper functions to work with\n * [Command](#Command) literals.\n */\nexport var Command;\n(function (Command) {\n    /**\n     * Creates a new Command literal.\n     */\n    function create(title, command) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        var result = { title: title, command: command };\n        if (Is.defined(args) && args.length > 0) {\n            result.arguments = args;\n        }\n        return result;\n    }\n    Command.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Command](#Command) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\n    }\n    Command.is = is;\n})(Command || (Command = {}));\n/**\n * The TextEdit namespace provides helper function to create replace,\n * insert and delete edits more easily.\n */\nexport var TextEdit;\n(function (TextEdit) {\n    /**\n     * Creates a replace text edit.\n     * @param range The range of text to be replaced.\n     * @param newText The new text.\n     */\n    function replace(range, newText) {\n        return { range: range, newText: newText };\n    }\n    TextEdit.replace = replace;\n    /**\n     * Creates a insert text edit.\n     * @param position The position to insert the text at.\n     * @param newText The text to be inserted.\n     */\n    function insert(position, newText) {\n        return { range: { start: position, end: position }, newText: newText };\n    }\n    TextEdit.insert = insert;\n    /**\n     * Creates a delete text edit.\n     * @param range The range of text to be deleted.\n     */\n    function del(range) {\n        return { range: range, newText: '' };\n    }\n    TextEdit.del = del;\n    function is(value) {\n        var candidate = value;\n        return Is.objectLiteral(candidate)\n            && Is.string(candidate.newText)\n            && Range.is(candidate.range);\n    }\n    TextEdit.is = is;\n})(TextEdit || (TextEdit = {}));\n/**\n * The TextDocumentEdit namespace provides helper function to create\n * an edit that manipulates a text document.\n */\nexport var TextDocumentEdit;\n(function (TextDocumentEdit) {\n    /**\n     * Creates a new `TextDocumentEdit`\n     */\n    function create(textDocument, edits) {\n        return { textDocument: textDocument, edits: edits };\n    }\n    TextDocumentEdit.create = create;\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate)\n            && VersionedTextDocumentIdentifier.is(candidate.textDocument)\n            && Array.isArray(candidate.edits);\n    }\n    TextDocumentEdit.is = is;\n})(TextDocumentEdit || (TextDocumentEdit = {}));\nexport var WorkspaceEdit;\n(function (WorkspaceEdit) {\n    function is(value) {\n        var candidate = value;\n        return candidate &&\n            (candidate.changes !== void 0 || candidate.documentChanges !== void 0) &&\n            (candidate.documentChanges === void 0 || Is.typedArray(candidate.documentChanges, TextDocumentEdit.is));\n    }\n    WorkspaceEdit.is = is;\n})(WorkspaceEdit || (WorkspaceEdit = {}));\nvar TextEditChangeImpl = /** @class */ (function () {\n    function TextEditChangeImpl(edits) {\n        this.edits = edits;\n    }\n    TextEditChangeImpl.prototype.insert = function (position, newText) {\n        this.edits.push(TextEdit.insert(position, newText));\n    };\n    TextEditChangeImpl.prototype.replace = function (range, newText) {\n        this.edits.push(TextEdit.replace(range, newText));\n    };\n    TextEditChangeImpl.prototype.delete = function (range) {\n        this.edits.push(TextEdit.del(range));\n    };\n    TextEditChangeImpl.prototype.add = function (edit) {\n        this.edits.push(edit);\n    };\n    TextEditChangeImpl.prototype.all = function () {\n        return this.edits;\n    };\n    TextEditChangeImpl.prototype.clear = function () {\n        this.edits.splice(0, this.edits.length);\n    };\n    return TextEditChangeImpl;\n}());\n/**\n * A workspace change helps constructing changes to a workspace.\n */\nvar WorkspaceChange = /** @class */ (function () {\n    function WorkspaceChange(workspaceEdit) {\n        var _this = this;\n        this._textEditChanges = Object.create(null);\n        if (workspaceEdit) {\n            this._workspaceEdit = workspaceEdit;\n            if (workspaceEdit.documentChanges) {\n                workspaceEdit.documentChanges.forEach(function (textDocumentEdit) {\n                    var textEditChange = new TextEditChangeImpl(textDocumentEdit.edits);\n                    _this._textEditChanges[textDocumentEdit.textDocument.uri] = textEditChange;\n                });\n            }\n            else if (workspaceEdit.changes) {\n                Object.keys(workspaceEdit.changes).forEach(function (key) {\n                    var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\n                    _this._textEditChanges[key] = textEditChange;\n                });\n            }\n        }\n    }\n    Object.defineProperty(WorkspaceChange.prototype, \"edit\", {\n        /**\n         * Returns the underlying [WorkspaceEdit](#WorkspaceEdit) literal\n         * use to be returned from a workspace edit operation like rename.\n         */\n        get: function () {\n            return this._workspaceEdit;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    WorkspaceChange.prototype.getTextEditChange = function (key) {\n        if (VersionedTextDocumentIdentifier.is(key)) {\n            if (!this._workspaceEdit) {\n                this._workspaceEdit = {\n                    documentChanges: []\n                };\n            }\n            if (!this._workspaceEdit.documentChanges) {\n                throw new Error('Workspace edit is not configured for versioned document changes.');\n            }\n            var textDocument = key;\n            var result = this._textEditChanges[textDocument.uri];\n            if (!result) {\n                var edits = [];\n                var textDocumentEdit = {\n                    textDocument: textDocument,\n                    edits: edits\n                };\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\n                result = new TextEditChangeImpl(edits);\n                this._textEditChanges[textDocument.uri] = result;\n            }\n            return result;\n        }\n        else {\n            if (!this._workspaceEdit) {\n                this._workspaceEdit = {\n                    changes: Object.create(null)\n                };\n            }\n            if (!this._workspaceEdit.changes) {\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\n            }\n            var result = this._textEditChanges[key];\n            if (!result) {\n                var edits = [];\n                this._workspaceEdit.changes[key] = edits;\n                result = new TextEditChangeImpl(edits);\n                this._textEditChanges[key] = result;\n            }\n            return result;\n        }\n    };\n    return WorkspaceChange;\n}());\nexport { WorkspaceChange };\n/**\n * The TextDocumentIdentifier namespace provides helper functions to work with\n * [TextDocumentIdentifier](#TextDocumentIdentifier) literals.\n */\nexport var TextDocumentIdentifier;\n(function (TextDocumentIdentifier) {\n    /**\n     * Creates a new TextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     */\n    function create(uri) {\n        return { uri: uri };\n    }\n    TextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the [TextDocumentIdentifier](#TextDocumentIdentifier) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri);\n    }\n    TextDocumentIdentifier.is = is;\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\n/**\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\n * [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) literals.\n */\nexport var VersionedTextDocumentIdentifier;\n(function (VersionedTextDocumentIdentifier) {\n    /**\n     * Creates a new VersionedTextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     * @param uri The document's text.\n     */\n    function create(uri, version) {\n        return { uri: uri, version: version };\n    }\n    VersionedTextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.number(candidate.version);\n    }\n    VersionedTextDocumentIdentifier.is = is;\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\n/**\n * The TextDocumentItem namespace provides helper functions to work with\n * [TextDocumentItem](#TextDocumentItem) literals.\n */\nexport var TextDocumentItem;\n(function (TextDocumentItem) {\n    /**\n     * Creates a new TextDocumentItem literal.\n     * @param uri The document's uri.\n     * @param languageId The document's language identifier.\n     * @param version The document's version number.\n     * @param text The document's text.\n     */\n    function create(uri, languageId, version, text) {\n        return { uri: uri, languageId: languageId, version: version, text: text };\n    }\n    TextDocumentItem.create = create;\n    /**\n     * Checks whether the given literal conforms to the [TextDocumentItem](#TextDocumentItem) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.number(candidate.version) && Is.string(candidate.text);\n    }\n    TextDocumentItem.is = is;\n})(TextDocumentItem || (TextDocumentItem = {}));\n/**\n * Describes the content type that a client supports in various\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\n *\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\n * are reserved for internal usage.\n */\nexport var MarkupKind;\n(function (MarkupKind) {\n    /**\n     * Plain text is supported as a content format\n     */\n    MarkupKind.PlainText = 'plaintext';\n    /**\n     * Markdown is supported as a content format\n     */\n    MarkupKind.Markdown = 'markdown';\n})(MarkupKind || (MarkupKind = {}));\n(function (MarkupKind) {\n    /**\n     * Checks whether the given value is a value of the [MarkupKind](#MarkupKind) type.\n     */\n    function is(value) {\n        var candidate = value;\n        return candidate === MarkupKind.PlainText || candidate === MarkupKind.Markdown;\n    }\n    MarkupKind.is = is;\n})(MarkupKind || (MarkupKind = {}));\nexport var MarkupContent;\n(function (MarkupContent) {\n    /**\n     * Checks whether the given value conforms to the [MarkupContent](#MarkupContent) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\n    }\n    MarkupContent.is = is;\n})(MarkupContent || (MarkupContent = {}));\n/**\n * The kind of a completion entry.\n */\nexport var CompletionItemKind;\n(function (CompletionItemKind) {\n    CompletionItemKind.Text = 1;\n    CompletionItemKind.Method = 2;\n    CompletionItemKind.Function = 3;\n    CompletionItemKind.Constructor = 4;\n    CompletionItemKind.Field = 5;\n    CompletionItemKind.Variable = 6;\n    CompletionItemKind.Class = 7;\n    CompletionItemKind.Interface = 8;\n    CompletionItemKind.Module = 9;\n    CompletionItemKind.Property = 10;\n    CompletionItemKind.Unit = 11;\n    CompletionItemKind.Value = 12;\n    CompletionItemKind.Enum = 13;\n    CompletionItemKind.Keyword = 14;\n    CompletionItemKind.Snippet = 15;\n    CompletionItemKind.Color = 16;\n    CompletionItemKind.File = 17;\n    CompletionItemKind.Reference = 18;\n    CompletionItemKind.Folder = 19;\n    CompletionItemKind.EnumMember = 20;\n    CompletionItemKind.Constant = 21;\n    CompletionItemKind.Struct = 22;\n    CompletionItemKind.Event = 23;\n    CompletionItemKind.Operator = 24;\n    CompletionItemKind.TypeParameter = 25;\n})(CompletionItemKind || (CompletionItemKind = {}));\n/**\n * Defines whether the insert text in a completion item should be interpreted as\n * plain text or a snippet.\n */\nexport var InsertTextFormat;\n(function (InsertTextFormat) {\n    /**\n     * The primary text to be inserted is treated as a plain string.\n     */\n    InsertTextFormat.PlainText = 1;\n    /**\n     * The primary text to be inserted is treated as a snippet.\n     *\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\n     * the end of the snippet. Placeholders with equal identifiers are linked,\n     * that is typing in one will update others too.\n     *\n     * See also: https://github.com/Microsoft/vscode/blob/master/src/vs/editor/contrib/snippet/common/snippet.md\n     */\n    InsertTextFormat.Snippet = 2;\n})(InsertTextFormat || (InsertTextFormat = {}));\n/**\n * The CompletionItem namespace provides functions to deal with\n * completion items.\n */\nexport var CompletionItem;\n(function (CompletionItem) {\n    /**\n     * Create a completion item and seed it with a label.\n     * @param label The completion item's label\n     */\n    function create(label) {\n        return { label: label };\n    }\n    CompletionItem.create = create;\n})(CompletionItem || (CompletionItem = {}));\n/**\n * The CompletionList namespace provides functions to deal with\n * completion lists.\n */\nexport var CompletionList;\n(function (CompletionList) {\n    /**\n     * Creates a new completion list.\n     *\n     * @param items The completion items.\n     * @param isIncomplete The list is not complete.\n     */\n    function create(items, isIncomplete) {\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\n    }\n    CompletionList.create = create;\n})(CompletionList || (CompletionList = {}));\nexport var MarkedString;\n(function (MarkedString) {\n    /**\n     * Creates a marked string from plain text.\n     *\n     * @param plainText The plain text.\n     */\n    function fromPlainText(plainText) {\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, \"\\\\$&\"); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n    }\n    MarkedString.fromPlainText = fromPlainText;\n    /**\n     * Checks whether the given value conforms to the [MarkedString](#MarkedString) type.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.string(candidate) || (Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value));\n    }\n    MarkedString.is = is;\n})(MarkedString || (MarkedString = {}));\nexport var Hover;\n(function (Hover) {\n    /**\n     * Checks whether the given value conforms to the [Hover](#Hover) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) ||\n            MarkedString.is(candidate.contents) ||\n            Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === void 0 || Range.is(value.range));\n    }\n    Hover.is = is;\n})(Hover || (Hover = {}));\n/**\n * The ParameterInformation namespace provides helper functions to work with\n * [ParameterInformation](#ParameterInformation) literals.\n */\nexport var ParameterInformation;\n(function (ParameterInformation) {\n    /**\n     * Creates a new parameter information literal.\n     *\n     * @param label A label string.\n     * @param documentation A doc string.\n     */\n    function create(label, documentation) {\n        return documentation ? { label: label, documentation: documentation } : { label: label };\n    }\n    ParameterInformation.create = create;\n    ;\n})(ParameterInformation || (ParameterInformation = {}));\n/**\n * The SignatureInformation namespace provides helper functions to work with\n * [SignatureInformation](#SignatureInformation) literals.\n */\nexport var SignatureInformation;\n(function (SignatureInformation) {\n    function create(label, documentation) {\n        var parameters = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            parameters[_i - 2] = arguments[_i];\n        }\n        var result = { label: label };\n        if (Is.defined(documentation)) {\n            result.documentation = documentation;\n        }\n        if (Is.defined(parameters)) {\n            result.parameters = parameters;\n        }\n        else {\n            result.parameters = [];\n        }\n        return result;\n    }\n    SignatureInformation.create = create;\n})(SignatureInformation || (SignatureInformation = {}));\n/**\n * A document highlight kind.\n */\nexport var DocumentHighlightKind;\n(function (DocumentHighlightKind) {\n    /**\n     * A textual occurrence.\n     */\n    DocumentHighlightKind.Text = 1;\n    /**\n     * Read-access of a symbol, like reading a variable.\n     */\n    DocumentHighlightKind.Read = 2;\n    /**\n     * Write-access of a symbol, like writing to a variable.\n     */\n    DocumentHighlightKind.Write = 3;\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\n/**\n * DocumentHighlight namespace to provide helper functions to work with\n * [DocumentHighlight](#DocumentHighlight) literals.\n */\nexport var DocumentHighlight;\n(function (DocumentHighlight) {\n    /**\n     * Create a DocumentHighlight object.\n     * @param range The range the highlight applies to.\n     */\n    function create(range, kind) {\n        var result = { range: range };\n        if (Is.number(kind)) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    DocumentHighlight.create = create;\n})(DocumentHighlight || (DocumentHighlight = {}));\n/**\n * A symbol kind.\n */\nexport var SymbolKind;\n(function (SymbolKind) {\n    SymbolKind.File = 1;\n    SymbolKind.Module = 2;\n    SymbolKind.Namespace = 3;\n    SymbolKind.Package = 4;\n    SymbolKind.Class = 5;\n    SymbolKind.Method = 6;\n    SymbolKind.Property = 7;\n    SymbolKind.Field = 8;\n    SymbolKind.Constructor = 9;\n    SymbolKind.Enum = 10;\n    SymbolKind.Interface = 11;\n    SymbolKind.Function = 12;\n    SymbolKind.Variable = 13;\n    SymbolKind.Constant = 14;\n    SymbolKind.String = 15;\n    SymbolKind.Number = 16;\n    SymbolKind.Boolean = 17;\n    SymbolKind.Array = 18;\n    SymbolKind.Object = 19;\n    SymbolKind.Key = 20;\n    SymbolKind.Null = 21;\n    SymbolKind.EnumMember = 22;\n    SymbolKind.Struct = 23;\n    SymbolKind.Event = 24;\n    SymbolKind.Operator = 25;\n    SymbolKind.TypeParameter = 26;\n})(SymbolKind || (SymbolKind = {}));\nexport var SymbolInformation;\n(function (SymbolInformation) {\n    /**\n     * Creates a new symbol information literal.\n     *\n     * @param name The name of the symbol.\n     * @param kind The kind of the symbol.\n     * @param range The range of the location of the symbol.\n     * @param uri The resource of the location of symbol, defaults to the current document.\n     * @param containerName The name of the symbol containing the symbol.\n     */\n    function create(name, kind, range, uri, containerName) {\n        var result = {\n            name: name,\n            kind: kind,\n            location: { uri: uri, range: range }\n        };\n        if (containerName) {\n            result.containerName = containerName;\n        }\n        return result;\n    }\n    SymbolInformation.create = create;\n})(SymbolInformation || (SymbolInformation = {}));\n/**\n * Represents programming constructs like variables, classes, interfaces etc.\n * that appear in a document. Document symbols can be hierarchical and they\n * have two ranges: one that encloses its definition and one that points to\n * its most interesting range, e.g. the range of an identifier.\n */\nvar DocumentSymbol = /** @class */ (function () {\n    function DocumentSymbol() {\n    }\n    return DocumentSymbol;\n}());\nexport { DocumentSymbol };\n(function (DocumentSymbol) {\n    /**\n     * Creates a new symbol information literal.\n     *\n     * @param name The name of the symbol.\n     * @param detail The detail of the symbol.\n     * @param kind The kind of the symbol.\n     * @param range The range of the symbol.\n     * @param selectionRange The selectionRange of the symbol.\n     * @param children Children of the symbol.\n     */\n    function create(name, detail, kind, range, selectionRange, children) {\n        var result = {\n            name: name,\n            detail: detail,\n            kind: kind,\n            range: range,\n            selectionRange: selectionRange\n        };\n        if (children !== void 0) {\n            result.children = children;\n        }\n        return result;\n    }\n    DocumentSymbol.create = create;\n    /**\n     * Checks whether the given literal conforms to the [DocumentSymbol](#DocumentSymbol) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return candidate &&\n            Is.string(candidate.name) && Is.number(candidate.kind) &&\n            Range.is(candidate.range) && Range.is(candidate.selectionRange) &&\n            (candidate.detail === void 0 || Is.string(candidate.detail)) &&\n            (candidate.deprecated === void 0 || Is.boolean(candidate.deprecated)) &&\n            (candidate.children === void 0 || Array.isArray(candidate.children));\n    }\n    DocumentSymbol.is = is;\n})(DocumentSymbol || (DocumentSymbol = {}));\n/**\n * A set of predefined code action kinds\n */\nexport var CodeActionKind;\n(function (CodeActionKind) {\n    /**\n     * Base kind for quickfix actions: 'quickfix'\n     */\n    CodeActionKind.QuickFix = 'quickfix';\n    /**\n     * Base kind for refactoring actions: 'refactor'\n     */\n    CodeActionKind.Refactor = 'refactor';\n    /**\n     * Base kind for refactoring extraction actions: 'refactor.extract'\n     *\n     * Example extract actions:\n     *\n     * - Extract method\n     * - Extract function\n     * - Extract variable\n     * - Extract interface from class\n     * - ...\n     */\n    CodeActionKind.RefactorExtract = 'refactor.extract';\n    /**\n     * Base kind for refactoring inline actions: 'refactor.inline'\n     *\n     * Example inline actions:\n     *\n     * - Inline function\n     * - Inline variable\n     * - Inline constant\n     * - ...\n     */\n    CodeActionKind.RefactorInline = 'refactor.inline';\n    /**\n     * Base kind for refactoring rewrite actions: 'refactor.rewrite'\n     *\n     * Example rewrite actions:\n     *\n     * - Convert JavaScript function to class\n     * - Add or remove parameter\n     * - Encapsulate field\n     * - Make method static\n     * - Move method to base class\n     * - ...\n     */\n    CodeActionKind.RefactorRewrite = 'refactor.rewrite';\n    /**\n     * Base kind for source actions: `source`\n     *\n     * Source code actions apply to the entire file.\n     */\n    CodeActionKind.Source = 'source';\n    /**\n     * Base kind for an organize imports source action: `source.organizeImports`\n     */\n    CodeActionKind.SourceOrganizeImports = 'source.organizeImports';\n})(CodeActionKind || (CodeActionKind = {}));\n/**\n * The CodeActionContext namespace provides helper functions to work with\n * [CodeActionContext](#CodeActionContext) literals.\n */\nexport var CodeActionContext;\n(function (CodeActionContext) {\n    /**\n     * Creates a new CodeActionContext literal.\n     */\n    function create(diagnostics, only) {\n        var result = { diagnostics: diagnostics };\n        if (only !== void 0 && only !== null) {\n            result.only = only;\n        }\n        return result;\n    }\n    CodeActionContext.create = create;\n    /**\n     * Checks whether the given literal conforms to the [CodeActionContext](#CodeActionContext) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is) && (candidate.only === void 0 || Is.typedArray(candidate.only, Is.string));\n    }\n    CodeActionContext.is = is;\n})(CodeActionContext || (CodeActionContext = {}));\nexport var CodeAction;\n(function (CodeAction) {\n    function create(title, commandOrEdit, kind) {\n        var result = { title: title };\n        if (Command.is(commandOrEdit)) {\n            result.command = commandOrEdit;\n        }\n        else {\n            result.edit = commandOrEdit;\n        }\n        if (kind !== void null) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    CodeAction.create = create;\n    function is(value) {\n        var candidate = value;\n        return candidate && Is.string(candidate.title) &&\n            (candidate.diagnostics === void 0 || Is.typedArray(candidate.diagnostics, Diagnostic.is)) &&\n            (candidate.kind === void 0 || Is.string(candidate.kind)) &&\n            (candidate.edit !== void 0 || candidate.command !== void 0) &&\n            (candidate.command === void 0 || Command.is(candidate.command)) &&\n            (candidate.edit === void 0 || WorkspaceEdit.is(candidate.edit));\n    }\n    CodeAction.is = is;\n})(CodeAction || (CodeAction = {}));\n/**\n * The CodeLens namespace provides helper functions to work with\n * [CodeLens](#CodeLens) literals.\n */\nexport var CodeLens;\n(function (CodeLens) {\n    /**\n     * Creates a new CodeLens literal.\n     */\n    function create(range, data) {\n        var result = { range: range };\n        if (Is.defined(data))\n            result.data = data;\n        return result;\n    }\n    CodeLens.create = create;\n    /**\n     * Checks whether the given literal conforms to the [CodeLens](#CodeLens) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\n    }\n    CodeLens.is = is;\n})(CodeLens || (CodeLens = {}));\n/**\n * The FormattingOptions namespace provides helper functions to work with\n * [FormattingOptions](#FormattingOptions) literals.\n */\nexport var FormattingOptions;\n(function (FormattingOptions) {\n    /**\n     * Creates a new FormattingOptions literal.\n     */\n    function create(tabSize, insertSpaces) {\n        return { tabSize: tabSize, insertSpaces: insertSpaces };\n    }\n    FormattingOptions.create = create;\n    /**\n     * Checks whether the given literal conforms to the [FormattingOptions](#FormattingOptions) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.number(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\n    }\n    FormattingOptions.is = is;\n})(FormattingOptions || (FormattingOptions = {}));\n/**\n * A document link is a range in a text document that links to an internal or external resource, like another\n * text document or a web site.\n */\nvar DocumentLink = /** @class */ (function () {\n    function DocumentLink() {\n    }\n    return DocumentLink;\n}());\nexport { DocumentLink };\n/**\n * The DocumentLink namespace provides helper functions to work with\n * [DocumentLink](#DocumentLink) literals.\n */\n(function (DocumentLink) {\n    /**\n     * Creates a new DocumentLink literal.\n     */\n    function create(range, target, data) {\n        return { range: range, target: target, data: data };\n    }\n    DocumentLink.create = create;\n    /**\n     * Checks whether the given literal conforms to the [DocumentLink](#DocumentLink) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\n    }\n    DocumentLink.is = is;\n})(DocumentLink || (DocumentLink = {}));\nexport var EOL = ['\\n', '\\r\\n', '\\r'];\nexport var TextDocument;\n(function (TextDocument) {\n    /**\n     * Creates a new ITextDocument literal from the given uri and content.\n     * @param uri The document's uri.\n     * @param languageId  The document's language Id.\n     * @param content The document's content.\n     */\n    function create(uri, languageId, version, content) {\n        return new FullTextDocument(uri, languageId, version, content);\n    }\n    TextDocument.create = create;\n    /**\n     * Checks whether the given literal conforms to the [ITextDocument](#ITextDocument) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.number(candidate.lineCount)\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\n    }\n    TextDocument.is = is;\n    function applyEdits(document, edits) {\n        var text = document.getText();\n        var sortedEdits = mergeSort(edits, function (a, b) {\n            var diff = a.range.start.line - b.range.start.line;\n            if (diff === 0) {\n                return a.range.start.character - b.range.start.character;\n            }\n            return diff;\n        });\n        var lastModifiedOffset = text.length;\n        for (var i = sortedEdits.length - 1; i >= 0; i--) {\n            var e = sortedEdits[i];\n            var startOffset = document.offsetAt(e.range.start);\n            var endOffset = document.offsetAt(e.range.end);\n            if (endOffset <= lastModifiedOffset) {\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\n            }\n            else {\n                throw new Error('Ovelapping edit');\n            }\n            lastModifiedOffset = startOffset;\n        }\n        return text;\n    }\n    TextDocument.applyEdits = applyEdits;\n    function mergeSort(data, compare) {\n        if (data.length <= 1) {\n            // sorted\n            return data;\n        }\n        var p = (data.length / 2) | 0;\n        var left = data.slice(0, p);\n        var right = data.slice(p);\n        mergeSort(left, compare);\n        mergeSort(right, compare);\n        var leftIdx = 0;\n        var rightIdx = 0;\n        var i = 0;\n        while (leftIdx < left.length && rightIdx < right.length) {\n            var ret = compare(left[leftIdx], right[rightIdx]);\n            if (ret <= 0) {\n                // smaller_equal -> take left to preserve order\n                data[i++] = left[leftIdx++];\n            }\n            else {\n                // greater -> take right\n                data[i++] = right[rightIdx++];\n            }\n        }\n        while (leftIdx < left.length) {\n            data[i++] = left[leftIdx++];\n        }\n        while (rightIdx < right.length) {\n            data[i++] = right[rightIdx++];\n        }\n        return data;\n    }\n})(TextDocument || (TextDocument = {}));\n/**\n * Represents reasons why a text document is saved.\n */\nexport var TextDocumentSaveReason;\n(function (TextDocumentSaveReason) {\n    /**\n     * Manually triggered, e.g. by the user pressing save, by starting debugging,\n     * or by an API call.\n     */\n    TextDocumentSaveReason.Manual = 1;\n    /**\n     * Automatic after a delay.\n     */\n    TextDocumentSaveReason.AfterDelay = 2;\n    /**\n     * When the editor lost focus.\n     */\n    TextDocumentSaveReason.FocusOut = 3;\n})(TextDocumentSaveReason || (TextDocumentSaveReason = {}));\nvar FullTextDocument = /** @class */ (function () {\n    function FullTextDocument(uri, languageId, version, content) {\n        this._uri = uri;\n        this._languageId = languageId;\n        this._version = version;\n        this._content = content;\n        this._lineOffsets = null;\n    }\n    Object.defineProperty(FullTextDocument.prototype, \"uri\", {\n        get: function () {\n            return this._uri;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\n        get: function () {\n            return this._languageId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FullTextDocument.prototype, \"version\", {\n        get: function () {\n            return this._version;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FullTextDocument.prototype.getText = function (range) {\n        if (range) {\n            var start = this.offsetAt(range.start);\n            var end = this.offsetAt(range.end);\n            return this._content.substring(start, end);\n        }\n        return this._content;\n    };\n    FullTextDocument.prototype.update = function (event, version) {\n        this._content = event.text;\n        this._version = version;\n        this._lineOffsets = null;\n    };\n    FullTextDocument.prototype.getLineOffsets = function () {\n        if (this._lineOffsets === null) {\n            var lineOffsets = [];\n            var text = this._content;\n            var isLineStart = true;\n            for (var i = 0; i < text.length; i++) {\n                if (isLineStart) {\n                    lineOffsets.push(i);\n                    isLineStart = false;\n                }\n                var ch = text.charAt(i);\n                isLineStart = (ch === '\\r' || ch === '\\n');\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n                    i++;\n                }\n            }\n            if (isLineStart && text.length > 0) {\n                lineOffsets.push(text.length);\n            }\n            this._lineOffsets = lineOffsets;\n        }\n        return this._lineOffsets;\n    };\n    FullTextDocument.prototype.positionAt = function (offset) {\n        offset = Math.max(Math.min(offset, this._content.length), 0);\n        var lineOffsets = this.getLineOffsets();\n        var low = 0, high = lineOffsets.length;\n        if (high === 0) {\n            return Position.create(0, offset);\n        }\n        while (low < high) {\n            var mid = Math.floor((low + high) / 2);\n            if (lineOffsets[mid] > offset) {\n                high = mid;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n        // low is the least x for which the line offset is larger than the current offset\n        // or array.length if no line offset is larger than the current offset\n        var line = low - 1;\n        return Position.create(line, offset - lineOffsets[line]);\n    };\n    FullTextDocument.prototype.offsetAt = function (position) {\n        var lineOffsets = this.getLineOffsets();\n        if (position.line >= lineOffsets.length) {\n            return this._content.length;\n        }\n        else if (position.line < 0) {\n            return 0;\n        }\n        var lineOffset = lineOffsets[position.line];\n        var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\n    };\n    Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\n        get: function () {\n            return this.getLineOffsets().length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return FullTextDocument;\n}());\nvar Is;\n(function (Is) {\n    var toString = Object.prototype.toString;\n    function defined(value) {\n        return typeof value !== 'undefined';\n    }\n    Is.defined = defined;\n    function undefined(value) {\n        return typeof value === 'undefined';\n    }\n    Is.undefined = undefined;\n    function boolean(value) {\n        return value === true || value === false;\n    }\n    Is.boolean = boolean;\n    function string(value) {\n        return toString.call(value) === '[object String]';\n    }\n    Is.string = string;\n    function number(value) {\n        return toString.call(value) === '[object Number]';\n    }\n    Is.number = number;\n    function func(value) {\n        return toString.call(value) === '[object Function]';\n    }\n    Is.func = func;\n    function objectLiteral(value) {\n        // Strictly speaking class instances pass this check as well. Since the LSP\n        // doesn't use classes we ignore this for now. If we do we need to add something\n        // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\n        return value !== null && typeof value === 'object';\n    }\n    Is.objectLiteral = objectLiteral;\n    function typedArray(value, check) {\n        return Array.isArray(value) && value.every(check);\n    }\n    Is.typedArray = typedArray;\n})(Is || (Is = {}));\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nimport * as ls from './_deps/vscode-languageserver-types/main.js';\r\nvar Uri = monaco.Uri;\r\nvar Range = monaco.Range;\r\n// --- diagnostics --- ---\r\nvar DiagnosticsAdapter = /** @class */ (function () {\r\n    function DiagnosticsAdapter(_languageId, _worker, defaults) {\r\n        var _this = this;\r\n        this._languageId = _languageId;\r\n        this._worker = _worker;\r\n        this._disposables = [];\r\n        this._listener = Object.create(null);\r\n        var onModelAdd = function (model) {\r\n            var modeId = model.getModeId();\r\n            if (modeId !== _this._languageId) {\r\n                return;\r\n            }\r\n            var handle;\r\n            _this._listener[model.uri.toString()] = model.onDidChangeContent(function () {\r\n                clearTimeout(handle);\r\n                handle = setTimeout(function () { return _this._doValidate(model.uri, modeId); }, 500);\r\n            });\r\n            _this._doValidate(model.uri, modeId);\r\n        };\r\n        var onModelRemoved = function (model) {\r\n            monaco.editor.setModelMarkers(model, _this._languageId, []);\r\n            var uriStr = model.uri.toString();\r\n            var listener = _this._listener[uriStr];\r\n            if (listener) {\r\n                listener.dispose();\r\n                delete _this._listener[uriStr];\r\n            }\r\n        };\r\n        this._disposables.push(monaco.editor.onDidCreateModel(onModelAdd));\r\n        this._disposables.push(monaco.editor.onWillDisposeModel(function (model) {\r\n            onModelRemoved(model);\r\n            _this._resetSchema(model.uri);\r\n        }));\r\n        this._disposables.push(monaco.editor.onDidChangeModelLanguage(function (event) {\r\n            onModelRemoved(event.model);\r\n            onModelAdd(event.model);\r\n            _this._resetSchema(event.model.uri);\r\n        }));\r\n        this._disposables.push(defaults.onDidChange(function (_) {\r\n            monaco.editor.getModels().forEach(function (model) {\r\n                if (model.getModeId() === _this._languageId) {\r\n                    onModelRemoved(model);\r\n                    onModelAdd(model);\r\n                }\r\n            });\r\n        }));\r\n        this._disposables.push({\r\n            dispose: function () {\r\n                monaco.editor.getModels().forEach(onModelRemoved);\r\n                for (var key in _this._listener) {\r\n                    _this._listener[key].dispose();\r\n                }\r\n            }\r\n        });\r\n        monaco.editor.getModels().forEach(onModelAdd);\r\n    }\r\n    DiagnosticsAdapter.prototype.dispose = function () {\r\n        this._disposables.forEach(function (d) { return d && d.dispose(); });\r\n        this._disposables = [];\r\n    };\r\n    DiagnosticsAdapter.prototype._resetSchema = function (resource) {\r\n        this._worker().then(function (worker) {\r\n            worker.resetSchema(resource.toString());\r\n        });\r\n    };\r\n    DiagnosticsAdapter.prototype._doValidate = function (resource, languageId) {\r\n        this._worker(resource).then(function (worker) {\r\n            return worker.doValidation(resource.toString()).then(function (diagnostics) {\r\n                var markers = diagnostics.map(function (d) { return toDiagnostics(resource, d); });\r\n                var model = monaco.editor.getModel(resource);\r\n                if (model.getModeId() === languageId) {\r\n                    monaco.editor.setModelMarkers(model, languageId, markers);\r\n                }\r\n            });\r\n        }).then(undefined, function (err) {\r\n            console.error(err);\r\n        });\r\n    };\r\n    return DiagnosticsAdapter;\r\n}());\r\nexport { DiagnosticsAdapter };\r\nfunction toSeverity(lsSeverity) {\r\n    switch (lsSeverity) {\r\n        case ls.DiagnosticSeverity.Error: return monaco.MarkerSeverity.Error;\r\n        case ls.DiagnosticSeverity.Warning: return monaco.MarkerSeverity.Warning;\r\n        case ls.DiagnosticSeverity.Information: return monaco.MarkerSeverity.Info;\r\n        case ls.DiagnosticSeverity.Hint: return monaco.MarkerSeverity.Hint;\r\n        default:\r\n            return monaco.MarkerSeverity.Info;\r\n    }\r\n}\r\nfunction toDiagnostics(resource, diag) {\r\n    var code = typeof diag.code === 'number' ? String(diag.code) : diag.code;\r\n    return {\r\n        severity: toSeverity(diag.severity),\r\n        startLineNumber: diag.range.start.line + 1,\r\n        startColumn: diag.range.start.character + 1,\r\n        endLineNumber: diag.range.end.line + 1,\r\n        endColumn: diag.range.end.character + 1,\r\n        message: diag.message,\r\n        code: code,\r\n        source: diag.source\r\n    };\r\n}\r\n// --- completion ------\r\nfunction fromPosition(position) {\r\n    if (!position) {\r\n        return void 0;\r\n    }\r\n    return { character: position.column - 1, line: position.lineNumber - 1 };\r\n}\r\nfunction fromRange(range) {\r\n    if (!range) {\r\n        return void 0;\r\n    }\r\n    return { start: { line: range.startLineNumber - 1, character: range.startColumn - 1 }, end: { line: range.endLineNumber - 1, character: range.endColumn - 1 } };\r\n}\r\nfunction toRange(range) {\r\n    if (!range) {\r\n        return void 0;\r\n    }\r\n    return new Range(range.start.line + 1, range.start.character + 1, range.end.line + 1, range.end.character + 1);\r\n}\r\nfunction toCompletionItemKind(kind) {\r\n    var mItemKind = monaco.languages.CompletionItemKind;\r\n    switch (kind) {\r\n        case ls.CompletionItemKind.Text: return mItemKind.Text;\r\n        case ls.CompletionItemKind.Method: return mItemKind.Method;\r\n        case ls.CompletionItemKind.Function: return mItemKind.Function;\r\n        case ls.CompletionItemKind.Constructor: return mItemKind.Constructor;\r\n        case ls.CompletionItemKind.Field: return mItemKind.Field;\r\n        case ls.CompletionItemKind.Variable: return mItemKind.Variable;\r\n        case ls.CompletionItemKind.Class: return mItemKind.Class;\r\n        case ls.CompletionItemKind.Interface: return mItemKind.Interface;\r\n        case ls.CompletionItemKind.Module: return mItemKind.Module;\r\n        case ls.CompletionItemKind.Property: return mItemKind.Property;\r\n        case ls.CompletionItemKind.Unit: return mItemKind.Unit;\r\n        case ls.CompletionItemKind.Value: return mItemKind.Value;\r\n        case ls.CompletionItemKind.Enum: return mItemKind.Enum;\r\n        case ls.CompletionItemKind.Keyword: return mItemKind.Keyword;\r\n        case ls.CompletionItemKind.Snippet: return mItemKind.Snippet;\r\n        case ls.CompletionItemKind.Color: return mItemKind.Color;\r\n        case ls.CompletionItemKind.File: return mItemKind.File;\r\n        case ls.CompletionItemKind.Reference: return mItemKind.Reference;\r\n    }\r\n    return mItemKind.Property;\r\n}\r\nfunction fromCompletionItemKind(kind) {\r\n    var mItemKind = monaco.languages.CompletionItemKind;\r\n    switch (kind) {\r\n        case mItemKind.Text: return ls.CompletionItemKind.Text;\r\n        case mItemKind.Method: return ls.CompletionItemKind.Method;\r\n        case mItemKind.Function: return ls.CompletionItemKind.Function;\r\n        case mItemKind.Constructor: return ls.CompletionItemKind.Constructor;\r\n        case mItemKind.Field: return ls.CompletionItemKind.Field;\r\n        case mItemKind.Variable: return ls.CompletionItemKind.Variable;\r\n        case mItemKind.Class: return ls.CompletionItemKind.Class;\r\n        case mItemKind.Interface: return ls.CompletionItemKind.Interface;\r\n        case mItemKind.Module: return ls.CompletionItemKind.Module;\r\n        case mItemKind.Property: return ls.CompletionItemKind.Property;\r\n        case mItemKind.Unit: return ls.CompletionItemKind.Unit;\r\n        case mItemKind.Value: return ls.CompletionItemKind.Value;\r\n        case mItemKind.Enum: return ls.CompletionItemKind.Enum;\r\n        case mItemKind.Keyword: return ls.CompletionItemKind.Keyword;\r\n        case mItemKind.Snippet: return ls.CompletionItemKind.Snippet;\r\n        case mItemKind.Color: return ls.CompletionItemKind.Color;\r\n        case mItemKind.File: return ls.CompletionItemKind.File;\r\n        case mItemKind.Reference: return ls.CompletionItemKind.Reference;\r\n    }\r\n    return ls.CompletionItemKind.Property;\r\n}\r\nfunction toTextEdit(textEdit) {\r\n    if (!textEdit) {\r\n        return void 0;\r\n    }\r\n    return {\r\n        range: toRange(textEdit.range),\r\n        text: textEdit.newText\r\n    };\r\n}\r\nvar CompletionAdapter = /** @class */ (function () {\r\n    function CompletionAdapter(_worker) {\r\n        this._worker = _worker;\r\n    }\r\n    Object.defineProperty(CompletionAdapter.prototype, \"triggerCharacters\", {\r\n        get: function () {\r\n            return [' ', ':'];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CompletionAdapter.prototype.provideCompletionItems = function (model, position, context, token) {\r\n        var wordInfo = model.getWordUntilPosition(position);\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) {\r\n            return worker.doComplete(resource.toString(), fromPosition(position));\r\n        }).then(function (info) {\r\n            if (!info) {\r\n                return;\r\n            }\r\n            var items = info.items.map(function (entry) {\r\n                var item = {\r\n                    label: entry.label,\r\n                    insertText: entry.insertText || entry.label,\r\n                    sortText: entry.sortText,\r\n                    filterText: entry.filterText,\r\n                    documentation: entry.documentation,\r\n                    detail: entry.detail,\r\n                    kind: toCompletionItemKind(entry.kind),\r\n                };\r\n                if (entry.textEdit) {\r\n                    item.range = toRange(entry.textEdit.range);\r\n                    item.insertText = entry.textEdit.newText;\r\n                }\r\n                if (entry.additionalTextEdits) {\r\n                    item.additionalTextEdits = entry.additionalTextEdits.map(toTextEdit);\r\n                }\r\n                if (entry.insertTextFormat === ls.InsertTextFormat.Snippet) {\r\n                    item.insertTextRules = monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet;\r\n                }\r\n                return item;\r\n            });\r\n            return {\r\n                isIncomplete: info.isIncomplete,\r\n                suggestions: items\r\n            };\r\n        });\r\n    };\r\n    return CompletionAdapter;\r\n}());\r\nexport { CompletionAdapter };\r\nfunction isMarkupContent(thing) {\r\n    return thing && typeof thing === 'object' && typeof thing.kind === 'string';\r\n}\r\nfunction toMarkdownString(entry) {\r\n    if (typeof entry === 'string') {\r\n        return {\r\n            value: entry\r\n        };\r\n    }\r\n    if (isMarkupContent(entry)) {\r\n        if (entry.kind === 'plaintext') {\r\n            return {\r\n                value: entry.value.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&')\r\n            };\r\n        }\r\n        return {\r\n            value: entry.value\r\n        };\r\n    }\r\n    return { value: '```' + entry.language + '\\n' + entry.value + '\\n```\\n' };\r\n}\r\nfunction toMarkedStringArray(contents) {\r\n    if (!contents) {\r\n        return void 0;\r\n    }\r\n    if (Array.isArray(contents)) {\r\n        return contents.map(toMarkdownString);\r\n    }\r\n    return [toMarkdownString(contents)];\r\n}\r\n// --- hover ------\r\nvar HoverAdapter = /** @class */ (function () {\r\n    function HoverAdapter(_worker) {\r\n        this._worker = _worker;\r\n    }\r\n    HoverAdapter.prototype.provideHover = function (model, position, token) {\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) {\r\n            return worker.doHover(resource.toString(), fromPosition(position));\r\n        }).then(function (info) {\r\n            if (!info) {\r\n                return;\r\n            }\r\n            return {\r\n                range: toRange(info.range),\r\n                contents: toMarkedStringArray(info.contents)\r\n            };\r\n        });\r\n    };\r\n    return HoverAdapter;\r\n}());\r\nexport { HoverAdapter };\r\n// --- definition ------\r\nfunction toLocation(location) {\r\n    return {\r\n        uri: Uri.parse(location.uri),\r\n        range: toRange(location.range)\r\n    };\r\n}\r\n// --- document symbols ------\r\nfunction toSymbolKind(kind) {\r\n    var mKind = monaco.languages.SymbolKind;\r\n    switch (kind) {\r\n        case ls.SymbolKind.File: return mKind.Array;\r\n        case ls.SymbolKind.Module: return mKind.Module;\r\n        case ls.SymbolKind.Namespace: return mKind.Namespace;\r\n        case ls.SymbolKind.Package: return mKind.Package;\r\n        case ls.SymbolKind.Class: return mKind.Class;\r\n        case ls.SymbolKind.Method: return mKind.Method;\r\n        case ls.SymbolKind.Property: return mKind.Property;\r\n        case ls.SymbolKind.Field: return mKind.Field;\r\n        case ls.SymbolKind.Constructor: return mKind.Constructor;\r\n        case ls.SymbolKind.Enum: return mKind.Enum;\r\n        case ls.SymbolKind.Interface: return mKind.Interface;\r\n        case ls.SymbolKind.Function: return mKind.Function;\r\n        case ls.SymbolKind.Variable: return mKind.Variable;\r\n        case ls.SymbolKind.Constant: return mKind.Constant;\r\n        case ls.SymbolKind.String: return mKind.String;\r\n        case ls.SymbolKind.Number: return mKind.Number;\r\n        case ls.SymbolKind.Boolean: return mKind.Boolean;\r\n        case ls.SymbolKind.Array: return mKind.Array;\r\n    }\r\n    return mKind.Function;\r\n}\r\nvar DocumentSymbolAdapter = /** @class */ (function () {\r\n    function DocumentSymbolAdapter(_worker) {\r\n        this._worker = _worker;\r\n    }\r\n    DocumentSymbolAdapter.prototype.provideDocumentSymbols = function (model, token) {\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) { return worker.findDocumentSymbols(resource.toString()); }).then(function (items) {\r\n            if (!items) {\r\n                return;\r\n            }\r\n            return items.map(function (item) { return ({\r\n                name: item.name,\r\n                detail: '',\r\n                containerName: item.containerName,\r\n                kind: toSymbolKind(item.kind),\r\n                range: toRange(item.location.range),\r\n                selectionRange: toRange(item.location.range)\r\n            }); });\r\n        });\r\n    };\r\n    return DocumentSymbolAdapter;\r\n}());\r\nexport { DocumentSymbolAdapter };\r\nfunction fromFormattingOptions(options) {\r\n    return {\r\n        tabSize: options.tabSize,\r\n        insertSpaces: options.insertSpaces\r\n    };\r\n}\r\nvar DocumentFormattingEditProvider = /** @class */ (function () {\r\n    function DocumentFormattingEditProvider(_worker) {\r\n        this._worker = _worker;\r\n    }\r\n    DocumentFormattingEditProvider.prototype.provideDocumentFormattingEdits = function (model, options, token) {\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) {\r\n            return worker.format(resource.toString(), null, fromFormattingOptions(options)).then(function (edits) {\r\n                if (!edits || edits.length === 0) {\r\n                    return;\r\n                }\r\n                return edits.map(toTextEdit);\r\n            });\r\n        });\r\n    };\r\n    return DocumentFormattingEditProvider;\r\n}());\r\nexport { DocumentFormattingEditProvider };\r\nvar DocumentRangeFormattingEditProvider = /** @class */ (function () {\r\n    function DocumentRangeFormattingEditProvider(_worker) {\r\n        this._worker = _worker;\r\n    }\r\n    DocumentRangeFormattingEditProvider.prototype.provideDocumentRangeFormattingEdits = function (model, range, options, token) {\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) {\r\n            return worker.format(resource.toString(), fromRange(range), fromFormattingOptions(options)).then(function (edits) {\r\n                if (!edits || edits.length === 0) {\r\n                    return;\r\n                }\r\n                return edits.map(toTextEdit);\r\n            });\r\n        });\r\n    };\r\n    return DocumentRangeFormattingEditProvider;\r\n}());\r\nexport { DocumentRangeFormattingEditProvider };\r\nvar DocumentColorAdapter = /** @class */ (function () {\r\n    function DocumentColorAdapter(_worker) {\r\n        this._worker = _worker;\r\n    }\r\n    DocumentColorAdapter.prototype.provideDocumentColors = function (model, token) {\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) { return worker.findDocumentColors(resource.toString()); }).then(function (infos) {\r\n            if (!infos) {\r\n                return;\r\n            }\r\n            return infos.map(function (item) { return ({\r\n                color: item.color,\r\n                range: toRange(item.range)\r\n            }); });\r\n        });\r\n    };\r\n    DocumentColorAdapter.prototype.provideColorPresentations = function (model, info, token) {\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) { return worker.getColorPresentations(resource.toString(), info.color, fromRange(info.range)); }).then(function (presentations) {\r\n            if (!presentations) {\r\n                return;\r\n            }\r\n            return presentations.map(function (presentation) {\r\n                var item = {\r\n                    label: presentation.label,\r\n                };\r\n                if (presentation.textEdit) {\r\n                    item.textEdit = toTextEdit(presentation.textEdit);\r\n                }\r\n                if (presentation.additionalTextEdits) {\r\n                    item.additionalTextEdits = presentation.additionalTextEdits.map(toTextEdit);\r\n                }\r\n                return item;\r\n            });\r\n        });\r\n    };\r\n    return DocumentColorAdapter;\r\n}());\r\nexport { DocumentColorAdapter };\r\nvar FoldingRangeAdapter = /** @class */ (function () {\r\n    function FoldingRangeAdapter(_worker) {\r\n        this._worker = _worker;\r\n    }\r\n    FoldingRangeAdapter.prototype.provideFoldingRanges = function (model, context, token) {\r\n        var resource = model.uri;\r\n        return this._worker(resource).then(function (worker) { return worker.provideFoldingRanges(resource.toString(), context); }).then(function (ranges) {\r\n            if (!ranges) {\r\n                return;\r\n            }\r\n            return ranges.map(function (range) {\r\n                var result = {\r\n                    start: range.startLine + 1,\r\n                    end: range.endLine + 1\r\n                };\r\n                if (typeof range.kind !== 'undefined') {\r\n                    result.kind = toFoldingRangeKind(range.kind);\r\n                }\r\n                return result;\r\n            });\r\n        });\r\n    };\r\n    return FoldingRangeAdapter;\r\n}());\r\nexport { FoldingRangeAdapter };\r\nfunction toFoldingRangeKind(kind) {\r\n    switch (kind) {\r\n        case ls.FoldingRangeKind.Comment: return monaco.languages.FoldingRangeKind.Comment;\r\n        case ls.FoldingRangeKind.Imports: return monaco.languages.FoldingRangeKind.Imports;\r\n        case ls.FoldingRangeKind.Region: return monaco.languages.FoldingRangeKind.Region;\r\n    }\r\n    return void 0;\r\n}\r\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\nexport function createScanner(text, ignoreTrivia) {\n    if (ignoreTrivia === void 0) { ignoreTrivia = false; }\n    var pos = 0, len = text.length, value = '', tokenOffset = 0, token = 16 /* Unknown */, scanError = 0 /* None */;\n    function scanHexDigits(count, exact) {\n        var digits = 0;\n        var value = 0;\n        while (digits < count || !exact) {\n            var ch = text.charCodeAt(pos);\n            if (ch >= 48 /* _0 */ && ch <= 57 /* _9 */) {\n                value = value * 16 + ch - 48 /* _0 */;\n            }\n            else if (ch >= 65 /* A */ && ch <= 70 /* F */) {\n                value = value * 16 + ch - 65 /* A */ + 10;\n            }\n            else if (ch >= 97 /* a */ && ch <= 102 /* f */) {\n                value = value * 16 + ch - 97 /* a */ + 10;\n            }\n            else {\n                break;\n            }\n            pos++;\n            digits++;\n        }\n        if (digits < count) {\n            value = -1;\n        }\n        return value;\n    }\n    function setPosition(newPosition) {\n        pos = newPosition;\n        value = '';\n        tokenOffset = 0;\n        token = 16 /* Unknown */;\n        scanError = 0 /* None */;\n    }\n    function scanNumber() {\n        var start = pos;\n        if (text.charCodeAt(pos) === 48 /* _0 */) {\n            pos++;\n        }\n        else {\n            pos++;\n            while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n            }\n        }\n        if (pos < text.length && text.charCodeAt(pos) === 46 /* dot */) {\n            pos++;\n            if (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n                while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                    pos++;\n                }\n            }\n            else {\n                scanError = 3 /* UnexpectedEndOfNumber */;\n                return text.substring(start, pos);\n            }\n        }\n        var end = pos;\n        if (pos < text.length && (text.charCodeAt(pos) === 69 /* E */ || text.charCodeAt(pos) === 101 /* e */)) {\n            pos++;\n            if (pos < text.length && text.charCodeAt(pos) === 43 /* plus */ || text.charCodeAt(pos) === 45 /* minus */) {\n                pos++;\n            }\n            if (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                pos++;\n                while (pos < text.length && isDigit(text.charCodeAt(pos))) {\n                    pos++;\n                }\n                end = pos;\n            }\n            else {\n                scanError = 3 /* UnexpectedEndOfNumber */;\n            }\n        }\n        return text.substring(start, end);\n    }\n    function scanString() {\n        var result = '', start = pos;\n        while (true) {\n            if (pos >= len) {\n                result += text.substring(start, pos);\n                scanError = 2 /* UnexpectedEndOfString */;\n                break;\n            }\n            var ch = text.charCodeAt(pos);\n            if (ch === 34 /* doubleQuote */) {\n                result += text.substring(start, pos);\n                pos++;\n                break;\n            }\n            if (ch === 92 /* backslash */) {\n                result += text.substring(start, pos);\n                pos++;\n                if (pos >= len) {\n                    scanError = 2 /* UnexpectedEndOfString */;\n                    break;\n                }\n                ch = text.charCodeAt(pos++);\n                switch (ch) {\n                    case 34 /* doubleQuote */:\n                        result += '\\\"';\n                        break;\n                    case 92 /* backslash */:\n                        result += '\\\\';\n                        break;\n                    case 47 /* slash */:\n                        result += '/';\n                        break;\n                    case 98 /* b */:\n                        result += '\\b';\n                        break;\n                    case 102 /* f */:\n                        result += '\\f';\n                        break;\n                    case 110 /* n */:\n                        result += '\\n';\n                        break;\n                    case 114 /* r */:\n                        result += '\\r';\n                        break;\n                    case 116 /* t */:\n                        result += '\\t';\n                        break;\n                    case 117 /* u */:\n                        var ch_1 = scanHexDigits(4, true);\n                        if (ch_1 >= 0) {\n                            result += String.fromCharCode(ch_1);\n                        }\n                        else {\n                            scanError = 4 /* InvalidUnicode */;\n                        }\n                        break;\n                    default:\n                        scanError = 5 /* InvalidEscapeCharacter */;\n                }\n                start = pos;\n                continue;\n            }\n            if (ch >= 0 && ch <= 0x1f) {\n                if (isLineBreak(ch)) {\n                    result += text.substring(start, pos);\n                    scanError = 2 /* UnexpectedEndOfString */;\n                    break;\n                }\n                else {\n                    scanError = 6 /* InvalidCharacter */;\n                    // mark as error but continue with string\n                }\n            }\n            pos++;\n        }\n        return result;\n    }\n    function scanNext() {\n        value = '';\n        scanError = 0 /* None */;\n        tokenOffset = pos;\n        if (pos >= len) {\n            // at the end\n            tokenOffset = len;\n            return token = 17 /* EOF */;\n        }\n        var code = text.charCodeAt(pos);\n        // trivia: whitespace\n        if (isWhiteSpace(code)) {\n            do {\n                pos++;\n                value += String.fromCharCode(code);\n                code = text.charCodeAt(pos);\n            } while (isWhiteSpace(code));\n            return token = 15 /* Trivia */;\n        }\n        // trivia: newlines\n        if (isLineBreak(code)) {\n            pos++;\n            value += String.fromCharCode(code);\n            if (code === 13 /* carriageReturn */ && text.charCodeAt(pos) === 10 /* lineFeed */) {\n                pos++;\n                value += '\\n';\n            }\n            return token = 14 /* LineBreakTrivia */;\n        }\n        switch (code) {\n            // tokens: []{}:,\n            case 123 /* openBrace */:\n                pos++;\n                return token = 1 /* OpenBraceToken */;\n            case 125 /* closeBrace */:\n                pos++;\n                return token = 2 /* CloseBraceToken */;\n            case 91 /* openBracket */:\n                pos++;\n                return token = 3 /* OpenBracketToken */;\n            case 93 /* closeBracket */:\n                pos++;\n                return token = 4 /* CloseBracketToken */;\n            case 58 /* colon */:\n                pos++;\n                return token = 6 /* ColonToken */;\n            case 44 /* comma */:\n                pos++;\n                return token = 5 /* CommaToken */;\n            // strings\n            case 34 /* doubleQuote */:\n                pos++;\n                value = scanString();\n                return token = 10 /* StringLiteral */;\n            // comments\n            case 47 /* slash */:\n                var start = pos - 1;\n                // Single-line comment\n                if (text.charCodeAt(pos + 1) === 47 /* slash */) {\n                    pos += 2;\n                    while (pos < len) {\n                        if (isLineBreak(text.charCodeAt(pos))) {\n                            break;\n                        }\n                        pos++;\n                    }\n                    value = text.substring(start, pos);\n                    return token = 12 /* LineCommentTrivia */;\n                }\n                // Multi-line comment\n                if (text.charCodeAt(pos + 1) === 42 /* asterisk */) {\n                    pos += 2;\n                    var commentClosed = false;\n                    while (pos < len) {\n                        var ch = text.charCodeAt(pos);\n                        if (ch === 42 /* asterisk */ && (pos + 1 < len) && text.charCodeAt(pos + 1) === 47 /* slash */) {\n                            pos += 2;\n                            commentClosed = true;\n                            break;\n                        }\n                        pos++;\n                    }\n                    if (!commentClosed) {\n                        pos++;\n                        scanError = 1 /* UnexpectedEndOfComment */;\n                    }\n                    value = text.substring(start, pos);\n                    return token = 13 /* BlockCommentTrivia */;\n                }\n                // just a single slash\n                value += String.fromCharCode(code);\n                pos++;\n                return token = 16 /* Unknown */;\n            // numbers\n            case 45 /* minus */:\n                value += String.fromCharCode(code);\n                pos++;\n                if (pos === len || !isDigit(text.charCodeAt(pos))) {\n                    return token = 16 /* Unknown */;\n                }\n            // found a minus, followed by a number so\n            // we fall through to proceed with scanning\n            // numbers\n            case 48 /* _0 */:\n            case 49 /* _1 */:\n            case 50 /* _2 */:\n            case 51 /* _3 */:\n            case 52 /* _4 */:\n            case 53 /* _5 */:\n            case 54 /* _6 */:\n            case 55 /* _7 */:\n            case 56 /* _8 */:\n            case 57 /* _9 */:\n                value += scanNumber();\n                return token = 11 /* NumericLiteral */;\n            // literals and unknown symbols\n            default:\n                // is a literal? Read the full word.\n                while (pos < len && isUnknownContentCharacter(code)) {\n                    pos++;\n                    code = text.charCodeAt(pos);\n                }\n                if (tokenOffset !== pos) {\n                    value = text.substring(tokenOffset, pos);\n                    // keywords: true, false, null\n                    switch (value) {\n                        case 'true': return token = 8 /* TrueKeyword */;\n                        case 'false': return token = 9 /* FalseKeyword */;\n                        case 'null': return token = 7 /* NullKeyword */;\n                    }\n                    return token = 16 /* Unknown */;\n                }\n                // some\n                value += String.fromCharCode(code);\n                pos++;\n                return token = 16 /* Unknown */;\n        }\n    }\n    function isUnknownContentCharacter(code) {\n        if (isWhiteSpace(code) || isLineBreak(code)) {\n            return false;\n        }\n        switch (code) {\n            case 125 /* closeBrace */:\n            case 93 /* closeBracket */:\n            case 123 /* openBrace */:\n            case 91 /* openBracket */:\n            case 34 /* doubleQuote */:\n            case 58 /* colon */:\n            case 44 /* comma */:\n            case 47 /* slash */:\n                return false;\n        }\n        return true;\n    }\n    function scanNextNonTrivia() {\n        var result;\n        do {\n            result = scanNext();\n        } while (result >= 12 /* LineCommentTrivia */ && result <= 15 /* Trivia */);\n        return result;\n    }\n    return {\n        setPosition: setPosition,\n        getPosition: function () { return pos; },\n        scan: ignoreTrivia ? scanNextNonTrivia : scanNext,\n        getToken: function () { return token; },\n        getTokenValue: function () { return value; },\n        getTokenOffset: function () { return tokenOffset; },\n        getTokenLength: function () { return pos - tokenOffset; },\n        getTokenError: function () { return scanError; }\n    };\n}\nfunction isWhiteSpace(ch) {\n    return ch === 32 /* space */ || ch === 9 /* tab */ || ch === 11 /* verticalTab */ || ch === 12 /* formFeed */ ||\n        ch === 160 /* nonBreakingSpace */ || ch === 5760 /* ogham */ || ch >= 8192 /* enQuad */ && ch <= 8203 /* zeroWidthSpace */ ||\n        ch === 8239 /* narrowNoBreakSpace */ || ch === 8287 /* mathematicalSpace */ || ch === 12288 /* ideographicSpace */ || ch === 65279 /* byteOrderMark */;\n}\nfunction isLineBreak(ch) {\n    return ch === 10 /* lineFeed */ || ch === 13 /* carriageReturn */ || ch === 8232 /* lineSeparator */ || ch === 8233 /* paragraphSeparator */;\n}\nfunction isDigit(ch) {\n    return ch >= 48 /* _0 */ && ch <= 57 /* _9 */;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { createScanner } from './scanner.js';\nexport function format(documentText, range, options) {\n    var initialIndentLevel;\n    var formatText;\n    var formatTextStart;\n    var rangeStart;\n    var rangeEnd;\n    if (range) {\n        rangeStart = range.offset;\n        rangeEnd = rangeStart + range.length;\n        formatTextStart = rangeStart;\n        while (formatTextStart > 0 && !isEOL(documentText, formatTextStart - 1)) {\n            formatTextStart--;\n        }\n        var endOffset = rangeEnd;\n        while (endOffset < documentText.length && !isEOL(documentText, endOffset)) {\n            endOffset++;\n        }\n        formatText = documentText.substring(formatTextStart, endOffset);\n        initialIndentLevel = computeIndentLevel(formatText, options);\n    }\n    else {\n        formatText = documentText;\n        initialIndentLevel = 0;\n        formatTextStart = 0;\n        rangeStart = 0;\n        rangeEnd = documentText.length;\n    }\n    var eol = getEOL(options, documentText);\n    var lineBreak = false;\n    var indentLevel = 0;\n    var indentValue;\n    if (options.insertSpaces) {\n        indentValue = repeat(' ', options.tabSize || 4);\n    }\n    else {\n        indentValue = '\\t';\n    }\n    var scanner = createScanner(formatText, false);\n    var hasError = false;\n    function newLineAndIndent() {\n        return eol + repeat(indentValue, initialIndentLevel + indentLevel);\n    }\n    function scanNext() {\n        var token = scanner.scan();\n        lineBreak = false;\n        while (token === 15 /* Trivia */ || token === 14 /* LineBreakTrivia */) {\n            lineBreak = lineBreak || (token === 14 /* LineBreakTrivia */);\n            token = scanner.scan();\n        }\n        hasError = token === 16 /* Unknown */ || scanner.getTokenError() !== 0 /* None */;\n        return token;\n    }\n    var editOperations = [];\n    function addEdit(text, startOffset, endOffset) {\n        if (!hasError && startOffset < rangeEnd && endOffset > rangeStart && documentText.substring(startOffset, endOffset) !== text) {\n            editOperations.push({ offset: startOffset, length: endOffset - startOffset, content: text });\n        }\n    }\n    var firstToken = scanNext();\n    if (firstToken !== 17 /* EOF */) {\n        var firstTokenStart = scanner.getTokenOffset() + formatTextStart;\n        var initialIndent = repeat(indentValue, initialIndentLevel);\n        addEdit(initialIndent, formatTextStart, firstTokenStart);\n    }\n    while (firstToken !== 17 /* EOF */) {\n        var firstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + formatTextStart;\n        var secondToken = scanNext();\n        var replaceContent = '';\n        while (!lineBreak && (secondToken === 12 /* LineCommentTrivia */ || secondToken === 13 /* BlockCommentTrivia */)) {\n            // comments on the same line: keep them on the same line, but ignore them otherwise\n            var commentTokenStart = scanner.getTokenOffset() + formatTextStart;\n            addEdit(' ', firstTokenEnd, commentTokenStart);\n            firstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + formatTextStart;\n            replaceContent = secondToken === 12 /* LineCommentTrivia */ ? newLineAndIndent() : '';\n            secondToken = scanNext();\n        }\n        if (secondToken === 2 /* CloseBraceToken */) {\n            if (firstToken !== 1 /* OpenBraceToken */) {\n                indentLevel--;\n                replaceContent = newLineAndIndent();\n            }\n        }\n        else if (secondToken === 4 /* CloseBracketToken */) {\n            if (firstToken !== 3 /* OpenBracketToken */) {\n                indentLevel--;\n                replaceContent = newLineAndIndent();\n            }\n        }\n        else {\n            switch (firstToken) {\n                case 3 /* OpenBracketToken */:\n                case 1 /* OpenBraceToken */:\n                    indentLevel++;\n                    replaceContent = newLineAndIndent();\n                    break;\n                case 5 /* CommaToken */:\n                case 12 /* LineCommentTrivia */:\n                    replaceContent = newLineAndIndent();\n                    break;\n                case 13 /* BlockCommentTrivia */:\n                    if (lineBreak) {\n                        replaceContent = newLineAndIndent();\n                    }\n                    else {\n                        // symbol following comment on the same line: keep on same line, separate with ' '\n                        replaceContent = ' ';\n                    }\n                    break;\n                case 6 /* ColonToken */:\n                    replaceContent = ' ';\n                    break;\n                case 10 /* StringLiteral */:\n                    if (secondToken === 6 /* ColonToken */) {\n                        replaceContent = '';\n                        break;\n                    }\n                // fall through\n                case 7 /* NullKeyword */:\n                case 8 /* TrueKeyword */:\n                case 9 /* FalseKeyword */:\n                case 11 /* NumericLiteral */:\n                case 2 /* CloseBraceToken */:\n                case 4 /* CloseBracketToken */:\n                    if (secondToken === 12 /* LineCommentTrivia */ || secondToken === 13 /* BlockCommentTrivia */) {\n                        replaceContent = ' ';\n                    }\n                    else if (secondToken !== 5 /* CommaToken */ && secondToken !== 17 /* EOF */) {\n                        hasError = true;\n                    }\n                    break;\n                case 16 /* Unknown */:\n                    hasError = true;\n                    break;\n            }\n            if (lineBreak && (secondToken === 12 /* LineCommentTrivia */ || secondToken === 13 /* BlockCommentTrivia */)) {\n                replaceContent = newLineAndIndent();\n            }\n        }\n        var secondTokenStart = scanner.getTokenOffset() + formatTextStart;\n        addEdit(replaceContent, firstTokenEnd, secondTokenStart);\n        firstToken = secondToken;\n    }\n    return editOperations;\n}\nfunction repeat(s, count) {\n    var result = '';\n    for (var i = 0; i < count; i++) {\n        result += s;\n    }\n    return result;\n}\nfunction computeIndentLevel(content, options) {\n    var i = 0;\n    var nChars = 0;\n    var tabSize = options.tabSize || 4;\n    while (i < content.length) {\n        var ch = content.charAt(i);\n        if (ch === ' ') {\n            nChars++;\n        }\n        else if (ch === '\\t') {\n            nChars += tabSize;\n        }\n        else {\n            break;\n        }\n        i++;\n    }\n    return Math.floor(nChars / tabSize);\n}\nfunction getEOL(options, text) {\n    for (var i = 0; i < text.length; i++) {\n        var ch = text.charAt(i);\n        if (ch === '\\r') {\n            if (i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n                return '\\r\\n';\n            }\n            return '\\r';\n        }\n        else if (ch === '\\n') {\n            return '\\n';\n        }\n    }\n    return (options && options.eol) || '\\n';\n}\nexport function isEOL(text, offset) {\n    return '\\r\\n'.indexOf(text.charAt(offset)) !== -1;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { createScanner } from './scanner.js';\n/**\n * For a given offset, evaluate the location in the JSON document. Each segment in the location path is either a property name or an array index.\n */\nexport function getLocation(text, position) {\n    var segments = []; // strings or numbers\n    var earlyReturnException = new Object();\n    var previousNode = void 0;\n    var previousNodeInst = {\n        value: {},\n        offset: 0,\n        length: 0,\n        type: 'object',\n        parent: void 0\n    };\n    var isAtPropertyKey = false;\n    function setPreviousNode(value, offset, length, type) {\n        previousNodeInst.value = value;\n        previousNodeInst.offset = offset;\n        previousNodeInst.length = length;\n        previousNodeInst.type = type;\n        previousNodeInst.colonOffset = void 0;\n        previousNode = previousNodeInst;\n    }\n    try {\n        visit(text, {\n            onObjectBegin: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = void 0;\n                isAtPropertyKey = position > offset;\n                segments.push(''); // push a placeholder (will be replaced)\n            },\n            onObjectProperty: function (name, offset, length) {\n                if (position < offset) {\n                    throw earlyReturnException;\n                }\n                setPreviousNode(name, offset, length, 'property');\n                segments[segments.length - 1] = name;\n                if (position <= offset + length) {\n                    throw earlyReturnException;\n                }\n            },\n            onObjectEnd: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = void 0;\n                segments.pop();\n            },\n            onArrayBegin: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = void 0;\n                segments.push(0);\n            },\n            onArrayEnd: function (offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                previousNode = void 0;\n                segments.pop();\n            },\n            onLiteralValue: function (value, offset, length) {\n                if (position < offset) {\n                    throw earlyReturnException;\n                }\n                setPreviousNode(value, offset, length, getLiteralNodeType(value));\n                if (position <= offset + length) {\n                    throw earlyReturnException;\n                }\n            },\n            onSeparator: function (sep, offset, length) {\n                if (position <= offset) {\n                    throw earlyReturnException;\n                }\n                if (sep === ':' && previousNode && previousNode.type === 'property') {\n                    previousNode.colonOffset = offset;\n                    isAtPropertyKey = false;\n                    previousNode = void 0;\n                }\n                else if (sep === ',') {\n                    var last = segments[segments.length - 1];\n                    if (typeof last === 'number') {\n                        segments[segments.length - 1] = last + 1;\n                    }\n                    else {\n                        isAtPropertyKey = true;\n                        segments[segments.length - 1] = '';\n                    }\n                    previousNode = void 0;\n                }\n            }\n        });\n    }\n    catch (e) {\n        if (e !== earlyReturnException) {\n            throw e;\n        }\n    }\n    return {\n        path: segments,\n        previousNode: previousNode,\n        isAtPropertyKey: isAtPropertyKey,\n        matches: function (pattern) {\n            var k = 0;\n            for (var i = 0; k < pattern.length && i < segments.length; i++) {\n                if (pattern[k] === segments[i] || pattern[k] === '*') {\n                    k++;\n                }\n                else if (pattern[k] !== '**') {\n                    return false;\n                }\n            }\n            return k === pattern.length;\n        }\n    };\n}\n/**\n * Parses the given text and returns the object the JSON content represents. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n * Therefore always check the errors list to find out if the input was valid.\n */\nexport function parse(text, errors, options) {\n    if (errors === void 0) { errors = []; }\n    var currentProperty = null;\n    var currentParent = [];\n    var previousParents = [];\n    function onValue(value) {\n        if (Array.isArray(currentParent)) {\n            currentParent.push(value);\n        }\n        else if (currentProperty) {\n            currentParent[currentProperty] = value;\n        }\n    }\n    var visitor = {\n        onObjectBegin: function () {\n            var object = {};\n            onValue(object);\n            previousParents.push(currentParent);\n            currentParent = object;\n            currentProperty = null;\n        },\n        onObjectProperty: function (name) {\n            currentProperty = name;\n        },\n        onObjectEnd: function () {\n            currentParent = previousParents.pop();\n        },\n        onArrayBegin: function () {\n            var array = [];\n            onValue(array);\n            previousParents.push(currentParent);\n            currentParent = array;\n            currentProperty = null;\n        },\n        onArrayEnd: function () {\n            currentParent = previousParents.pop();\n        },\n        onLiteralValue: onValue,\n        onError: function (error, offset, length) {\n            errors.push({ error: error, offset: offset, length: length });\n        }\n    };\n    visit(text, visitor, options);\n    return currentParent[0];\n}\n/**\n * Parses the given text and returns a tree representation the JSON content. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n */\nexport function parseTree(text, errors, options) {\n    if (errors === void 0) { errors = []; }\n    var currentParent = { type: 'array', offset: -1, length: -1, children: [], parent: void 0 }; // artificial root\n    function ensurePropertyComplete(endOffset) {\n        if (currentParent.type === 'property') {\n            currentParent.length = endOffset - currentParent.offset;\n            currentParent = currentParent.parent;\n        }\n    }\n    function onValue(valueNode) {\n        currentParent.children.push(valueNode);\n        return valueNode;\n    }\n    var visitor = {\n        onObjectBegin: function (offset) {\n            currentParent = onValue({ type: 'object', offset: offset, length: -1, parent: currentParent, children: [] });\n        },\n        onObjectProperty: function (name, offset, length) {\n            currentParent = onValue({ type: 'property', offset: offset, length: -1, parent: currentParent, children: [] });\n            currentParent.children.push({ type: 'string', value: name, offset: offset, length: length, parent: currentParent });\n        },\n        onObjectEnd: function (offset, length) {\n            currentParent.length = offset + length - currentParent.offset;\n            currentParent = currentParent.parent;\n            ensurePropertyComplete(offset + length);\n        },\n        onArrayBegin: function (offset, length) {\n            currentParent = onValue({ type: 'array', offset: offset, length: -1, parent: currentParent, children: [] });\n        },\n        onArrayEnd: function (offset, length) {\n            currentParent.length = offset + length - currentParent.offset;\n            currentParent = currentParent.parent;\n            ensurePropertyComplete(offset + length);\n        },\n        onLiteralValue: function (value, offset, length) {\n            onValue({ type: getLiteralNodeType(value), offset: offset, length: length, parent: currentParent, value: value });\n            ensurePropertyComplete(offset + length);\n        },\n        onSeparator: function (sep, offset, length) {\n            if (currentParent.type === 'property') {\n                if (sep === ':') {\n                    currentParent.colonOffset = offset;\n                }\n                else if (sep === ',') {\n                    ensurePropertyComplete(offset);\n                }\n            }\n        },\n        onError: function (error, offset, length) {\n            errors.push({ error: error, offset: offset, length: length });\n        }\n    };\n    visit(text, visitor, options);\n    var result = currentParent.children[0];\n    if (result) {\n        delete result.parent;\n    }\n    return result;\n}\n/**\n * Finds the node at the given path in a JSON DOM.\n */\nexport function findNodeAtLocation(root, path) {\n    if (!root) {\n        return void 0;\n    }\n    var node = root;\n    for (var _i = 0, path_1 = path; _i < path_1.length; _i++) {\n        var segment = path_1[_i];\n        if (typeof segment === 'string') {\n            if (node.type !== 'object' || !Array.isArray(node.children)) {\n                return void 0;\n            }\n            var found = false;\n            for (var _a = 0, _b = node.children; _a < _b.length; _a++) {\n                var propertyNode = _b[_a];\n                if (Array.isArray(propertyNode.children) && propertyNode.children[0].value === segment) {\n                    node = propertyNode.children[1];\n                    found = true;\n                    break;\n                }\n            }\n            if (!found) {\n                return void 0;\n            }\n        }\n        else {\n            var index = segment;\n            if (node.type !== 'array' || index < 0 || !Array.isArray(node.children) || index >= node.children.length) {\n                return void 0;\n            }\n            node = node.children[index];\n        }\n    }\n    return node;\n}\n/**\n * Gets the JSON path of the given JSON DOM node\n */\nexport function getNodePath(node) {\n    if (!node.parent || !node.parent.children) {\n        return [];\n    }\n    var path = getNodePath(node.parent);\n    if (node.parent.type === 'property') {\n        var key = node.parent.children[0].value;\n        path.push(key);\n    }\n    else if (node.parent.type === 'array') {\n        var index = node.parent.children.indexOf(node);\n        if (index !== -1) {\n            path.push(index);\n        }\n    }\n    return path;\n}\n/**\n * Evaluates the JavaScript object of the given JSON DOM node\n */\nexport function getNodeValue(node) {\n    switch (node.type) {\n        case 'array':\n            return node.children.map(getNodeValue);\n        case 'object':\n            var obj = Object.create(null);\n            for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n                var prop = _a[_i];\n                var valueNode = prop.children[1];\n                if (valueNode) {\n                    obj[prop.children[0].value] = getNodeValue(valueNode);\n                }\n            }\n            return obj;\n        case 'null':\n        case 'string':\n        case 'number':\n        case 'boolean':\n            return node.value;\n        default:\n            return void 0;\n    }\n}\nexport function contains(node, offset, includeRightBound) {\n    if (includeRightBound === void 0) { includeRightBound = false; }\n    return (offset >= node.offset && offset < (node.offset + node.length)) || includeRightBound && (offset === (node.offset + node.length));\n}\n/**\n * Finds the most inner node at the given offset. If includeRightBound is set, also finds nodes that end at the given offset.\n */\nexport function findNodeAtOffset(node, offset, includeRightBound) {\n    if (includeRightBound === void 0) { includeRightBound = false; }\n    if (contains(node, offset, includeRightBound)) {\n        var children = node.children;\n        if (Array.isArray(children)) {\n            for (var i = 0; i < children.length && children[i].offset <= offset; i++) {\n                var item = findNodeAtOffset(children[i], offset, includeRightBound);\n                if (item) {\n                    return item;\n                }\n            }\n        }\n        return node;\n    }\n    return void 0;\n}\n/**\n * Parses the given text and invokes the visitor functions for each object, array and literal reached.\n */\nexport function visit(text, visitor, options) {\n    var _scanner = createScanner(text, false);\n    function toNoArgVisit(visitFunction) {\n        return visitFunction ? function () { return visitFunction(_scanner.getTokenOffset(), _scanner.getTokenLength()); } : function () { return true; };\n    }\n    function toOneArgVisit(visitFunction) {\n        return visitFunction ? function (arg) { return visitFunction(arg, _scanner.getTokenOffset(), _scanner.getTokenLength()); } : function () { return true; };\n    }\n    var onObjectBegin = toNoArgVisit(visitor.onObjectBegin), onObjectProperty = toOneArgVisit(visitor.onObjectProperty), onObjectEnd = toNoArgVisit(visitor.onObjectEnd), onArrayBegin = toNoArgVisit(visitor.onArrayBegin), onArrayEnd = toNoArgVisit(visitor.onArrayEnd), onLiteralValue = toOneArgVisit(visitor.onLiteralValue), onSeparator = toOneArgVisit(visitor.onSeparator), onComment = toNoArgVisit(visitor.onComment), onError = toOneArgVisit(visitor.onError);\n    var disallowComments = options && options.disallowComments;\n    var allowTrailingComma = options && options.allowTrailingComma;\n    function scanNext() {\n        while (true) {\n            var token = _scanner.scan();\n            switch (_scanner.getTokenError()) {\n                case 4 /* InvalidUnicode */:\n                    handleError(14 /* InvalidUnicode */);\n                    break;\n                case 5 /* InvalidEscapeCharacter */:\n                    handleError(15 /* InvalidEscapeCharacter */);\n                    break;\n                case 3 /* UnexpectedEndOfNumber */:\n                    handleError(13 /* UnexpectedEndOfNumber */);\n                    break;\n                case 1 /* UnexpectedEndOfComment */:\n                    if (!disallowComments) {\n                        handleError(11 /* UnexpectedEndOfComment */);\n                    }\n                    break;\n                case 2 /* UnexpectedEndOfString */:\n                    handleError(12 /* UnexpectedEndOfString */);\n                    break;\n                case 6 /* InvalidCharacter */:\n                    handleError(16 /* InvalidCharacter */);\n                    break;\n            }\n            switch (token) {\n                case 12 /* LineCommentTrivia */:\n                case 13 /* BlockCommentTrivia */:\n                    if (disallowComments) {\n                        handleError(10 /* InvalidCommentToken */);\n                    }\n                    else {\n                        onComment();\n                    }\n                    break;\n                case 16 /* Unknown */:\n                    handleError(1 /* InvalidSymbol */);\n                    break;\n                case 15 /* Trivia */:\n                case 14 /* LineBreakTrivia */:\n                    break;\n                default:\n                    return token;\n            }\n        }\n    }\n    function handleError(error, skipUntilAfter, skipUntil) {\n        if (skipUntilAfter === void 0) { skipUntilAfter = []; }\n        if (skipUntil === void 0) { skipUntil = []; }\n        onError(error);\n        if (skipUntilAfter.length + skipUntil.length > 0) {\n            var token = _scanner.getToken();\n            while (token !== 17 /* EOF */) {\n                if (skipUntilAfter.indexOf(token) !== -1) {\n                    scanNext();\n                    break;\n                }\n                else if (skipUntil.indexOf(token) !== -1) {\n                    break;\n                }\n                token = scanNext();\n            }\n        }\n    }\n    function parseString(isValue) {\n        var value = _scanner.getTokenValue();\n        if (isValue) {\n            onLiteralValue(value);\n        }\n        else {\n            onObjectProperty(value);\n        }\n        scanNext();\n        return true;\n    }\n    function parseLiteral() {\n        switch (_scanner.getToken()) {\n            case 11 /* NumericLiteral */:\n                var value = 0;\n                try {\n                    value = JSON.parse(_scanner.getTokenValue());\n                    if (typeof value !== 'number') {\n                        handleError(2 /* InvalidNumberFormat */);\n                        value = 0;\n                    }\n                }\n                catch (e) {\n                    handleError(2 /* InvalidNumberFormat */);\n                }\n                onLiteralValue(value);\n                break;\n            case 7 /* NullKeyword */:\n                onLiteralValue(null);\n                break;\n            case 8 /* TrueKeyword */:\n                onLiteralValue(true);\n                break;\n            case 9 /* FalseKeyword */:\n                onLiteralValue(false);\n                break;\n            default:\n                return false;\n        }\n        scanNext();\n        return true;\n    }\n    function parseProperty() {\n        if (_scanner.getToken() !== 10 /* StringLiteral */) {\n            handleError(3 /* PropertyNameExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n            return false;\n        }\n        parseString(false);\n        if (_scanner.getToken() === 6 /* ColonToken */) {\n            onSeparator(':');\n            scanNext(); // consume colon\n            if (!parseValue()) {\n                handleError(4 /* ValueExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n            }\n        }\n        else {\n            handleError(5 /* ColonExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n        }\n        return true;\n    }\n    function parseObject() {\n        onObjectBegin();\n        scanNext(); // consume open brace\n        var needsComma = false;\n        while (_scanner.getToken() !== 2 /* CloseBraceToken */ && _scanner.getToken() !== 17 /* EOF */) {\n            if (_scanner.getToken() === 5 /* CommaToken */) {\n                if (!needsComma) {\n                    handleError(4 /* ValueExpected */, [], []);\n                }\n                onSeparator(',');\n                scanNext(); // consume comma\n                if (_scanner.getToken() === 2 /* CloseBraceToken */ && allowTrailingComma) {\n                    break;\n                }\n            }\n            else if (needsComma) {\n                handleError(6 /* CommaExpected */, [], []);\n            }\n            if (!parseProperty()) {\n                handleError(4 /* ValueExpected */, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n            }\n            needsComma = true;\n        }\n        onObjectEnd();\n        if (_scanner.getToken() !== 2 /* CloseBraceToken */) {\n            handleError(7 /* CloseBraceExpected */, [2 /* CloseBraceToken */], []);\n        }\n        else {\n            scanNext(); // consume close brace\n        }\n        return true;\n    }\n    function parseArray() {\n        onArrayBegin();\n        scanNext(); // consume open bracket\n        var needsComma = false;\n        while (_scanner.getToken() !== 4 /* CloseBracketToken */ && _scanner.getToken() !== 17 /* EOF */) {\n            if (_scanner.getToken() === 5 /* CommaToken */) {\n                if (!needsComma) {\n                    handleError(4 /* ValueExpected */, [], []);\n                }\n                onSeparator(',');\n                scanNext(); // consume comma\n                if (_scanner.getToken() === 4 /* CloseBracketToken */ && allowTrailingComma) {\n                    break;\n                }\n            }\n            else if (needsComma) {\n                handleError(6 /* CommaExpected */, [], []);\n            }\n            if (!parseValue()) {\n                handleError(4 /* ValueExpected */, [], [4 /* CloseBracketToken */, 5 /* CommaToken */]);\n            }\n            needsComma = true;\n        }\n        onArrayEnd();\n        if (_scanner.getToken() !== 4 /* CloseBracketToken */) {\n            handleError(8 /* CloseBracketExpected */, [4 /* CloseBracketToken */], []);\n        }\n        else {\n            scanNext(); // consume close bracket\n        }\n        return true;\n    }\n    function parseValue() {\n        switch (_scanner.getToken()) {\n            case 3 /* OpenBracketToken */:\n                return parseArray();\n            case 1 /* OpenBraceToken */:\n                return parseObject();\n            case 10 /* StringLiteral */:\n                return parseString(true);\n            default:\n                return parseLiteral();\n        }\n    }\n    scanNext();\n    if (_scanner.getToken() === 17 /* EOF */) {\n        return true;\n    }\n    if (!parseValue()) {\n        handleError(4 /* ValueExpected */, [], []);\n        return false;\n    }\n    if (_scanner.getToken() !== 17 /* EOF */) {\n        handleError(9 /* EndOfFileExpected */, [], []);\n    }\n    return true;\n}\n/**\n * Takes JSON with JavaScript-style comments and remove\n * them. Optionally replaces every none-newline character\n * of comments with a replaceCharacter\n */\nexport function stripComments(text, replaceCh) {\n    var _scanner = createScanner(text), parts = [], kind, offset = 0, pos;\n    do {\n        pos = _scanner.getPosition();\n        kind = _scanner.scan();\n        switch (kind) {\n            case 12 /* LineCommentTrivia */:\n            case 13 /* BlockCommentTrivia */:\n            case 17 /* EOF */:\n                if (offset !== pos) {\n                    parts.push(text.substring(offset, pos));\n                }\n                if (replaceCh !== void 0) {\n                    parts.push(_scanner.getTokenValue().replace(/[^\\r\\n]/g, replaceCh));\n                }\n                offset = _scanner.getPosition();\n                break;\n        }\n    } while (kind !== 17 /* EOF */);\n    return parts.join('');\n}\nfunction getLiteralNodeType(value) {\n    switch (typeof value) {\n        case 'boolean': return 'boolean';\n        case 'number': return 'number';\n        case 'string': return 'string';\n        default: return 'null';\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport { format, isEOL } from './format.js';\nimport { parseTree, findNodeAtLocation } from './parser.js';\nexport function removeProperty(text, path, formattingOptions) {\n    return setProperty(text, path, void 0, formattingOptions);\n}\nexport function setProperty(text, originalPath, value, formattingOptions, getInsertionIndex) {\n    var path = originalPath.slice();\n    var errors = [];\n    var root = parseTree(text, errors);\n    var parent = void 0;\n    var lastSegment = void 0;\n    while (path.length > 0) {\n        lastSegment = path.pop();\n        parent = findNodeAtLocation(root, path);\n        if (parent === void 0 && value !== void 0) {\n            if (typeof lastSegment === 'string') {\n                value = (_a = {}, _a[lastSegment] = value, _a);\n            }\n            else {\n                value = [value];\n            }\n        }\n        else {\n            break;\n        }\n    }\n    if (!parent) {\n        // empty document\n        if (value === void 0) { // delete\n            throw new Error('Can not delete in empty document');\n        }\n        return withFormatting(text, { offset: root ? root.offset : 0, length: root ? root.length : 0, content: JSON.stringify(value) }, formattingOptions);\n    }\n    else if (parent.type === 'object' && typeof lastSegment === 'string' && Array.isArray(parent.children)) {\n        var existing = findNodeAtLocation(parent, [lastSegment]);\n        if (existing !== void 0) {\n            if (value === void 0) { // delete\n                if (!existing.parent) {\n                    throw new Error('Malformed AST');\n                }\n                var propertyIndex = parent.children.indexOf(existing.parent);\n                var removeBegin = void 0;\n                var removeEnd = existing.parent.offset + existing.parent.length;\n                if (propertyIndex > 0) {\n                    // remove the comma of the previous node\n                    var previous = parent.children[propertyIndex - 1];\n                    removeBegin = previous.offset + previous.length;\n                }\n                else {\n                    removeBegin = parent.offset + 1;\n                    if (parent.children.length > 1) {\n                        // remove the comma of the next node\n                        var next = parent.children[1];\n                        removeEnd = next.offset;\n                    }\n                }\n                return withFormatting(text, { offset: removeBegin, length: removeEnd - removeBegin, content: '' }, formattingOptions);\n            }\n            else {\n                // set value of existing property\n                return withFormatting(text, { offset: existing.offset, length: existing.length, content: JSON.stringify(value) }, formattingOptions);\n            }\n        }\n        else {\n            if (value === void 0) { // delete\n                return []; // property does not exist, nothing to do\n            }\n            var newProperty = JSON.stringify(lastSegment) + \": \" + JSON.stringify(value);\n            var index = getInsertionIndex ? getInsertionIndex(parent.children.map(function (p) { return p.children[0].value; })) : parent.children.length;\n            var edit = void 0;\n            if (index > 0) {\n                var previous = parent.children[index - 1];\n                edit = { offset: previous.offset + previous.length, length: 0, content: ',' + newProperty };\n            }\n            else if (parent.children.length === 0) {\n                edit = { offset: parent.offset + 1, length: 0, content: newProperty };\n            }\n            else {\n                edit = { offset: parent.offset + 1, length: 0, content: newProperty + ',' };\n            }\n            return withFormatting(text, edit, formattingOptions);\n        }\n    }\n    else if (parent.type === 'array' && typeof lastSegment === 'number' && Array.isArray(parent.children)) {\n        var insertIndex = lastSegment;\n        if (insertIndex === -1) {\n            // Insert\n            var newProperty = \"\" + JSON.stringify(value);\n            var edit = void 0;\n            if (parent.children.length === 0) {\n                edit = { offset: parent.offset + 1, length: 0, content: newProperty };\n            }\n            else {\n                var previous = parent.children[parent.children.length - 1];\n                edit = { offset: previous.offset + previous.length, length: 0, content: ',' + newProperty };\n            }\n            return withFormatting(text, edit, formattingOptions);\n        }\n        else {\n            if (value === void 0 && parent.children.length >= 0) {\n                //Removal\n                var removalIndex = lastSegment;\n                var toRemove = parent.children[removalIndex];\n                var edit = void 0;\n                if (parent.children.length === 1) {\n                    // only item\n                    edit = { offset: parent.offset + 1, length: parent.length - 2, content: '' };\n                }\n                else if (parent.children.length - 1 === removalIndex) {\n                    // last item\n                    var previous = parent.children[removalIndex - 1];\n                    var offset = previous.offset + previous.length;\n                    var parentEndOffset = parent.offset + parent.length;\n                    edit = { offset: offset, length: parentEndOffset - 2 - offset, content: '' };\n                }\n                else {\n                    edit = { offset: toRemove.offset, length: parent.children[removalIndex + 1].offset - toRemove.offset, content: '' };\n                }\n                return withFormatting(text, edit, formattingOptions);\n            }\n            else {\n                throw new Error('Array modification not supported yet');\n            }\n        }\n    }\n    else {\n        throw new Error(\"Can not add \" + (typeof lastSegment !== 'number' ? 'index' : 'property') + \" to parent of type \" + parent.type);\n    }\n    var _a;\n}\nfunction withFormatting(text, edit, formattingOptions) {\n    // apply the edit\n    var newText = applyEdit(text, edit);\n    // format the new text\n    var begin = edit.offset;\n    var end = edit.offset + edit.content.length;\n    if (edit.length === 0 || edit.content.length === 0) { // insert or remove\n        while (begin > 0 && !isEOL(newText, begin - 1)) {\n            begin--;\n        }\n        while (end < newText.length && !isEOL(newText, end)) {\n            end++;\n        }\n    }\n    var edits = format(newText, { offset: begin, length: end - begin }, formattingOptions);\n    // apply the formatting edits and track the begin and end offsets of the changes\n    for (var i = edits.length - 1; i >= 0; i--) {\n        var edit_1 = edits[i];\n        newText = applyEdit(newText, edit_1);\n        begin = Math.min(begin, edit_1.offset);\n        end = Math.max(end, edit_1.offset + edit_1.length);\n        end += edit_1.content.length - edit_1.length;\n    }\n    // create a single edit with all changes\n    var editLength = text.length - (newText.length - end) - begin;\n    return [{ offset: begin, length: editLength, content: newText.substring(begin, end) }];\n}\nexport function applyEdit(text, edit) {\n    return text.substring(0, edit.offset) + edit.content + text.substring(edit.offset + edit.length);\n}\nexport function isWS(text, offset) {\n    return '\\r\\n \\t'.indexOf(text.charAt(offset)) !== -1;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nimport * as formatter from './impl/format.js';\nimport * as edit from './impl/edit.js';\nimport * as scanner from './impl/scanner.js';\nimport * as parser from './impl/parser.js';\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\nexport var createScanner = scanner.createScanner;\n/**\n * For a given offset, evaluate the location in the JSON document. Each segment in the location path is either a property name or an array index.\n */\nexport var getLocation = parser.getLocation;\n/**\n * Parses the given text and returns the object the JSON content represents. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n * Therefore always check the errors list to find out if the input was valid.\n */\nexport var parse = parser.parse;\n/**\n * Parses the given text and returns a tree representation the JSON content. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n */\nexport var parseTree = parser.parseTree;\n/**\n * Finds the node at the given path in a JSON DOM.\n */\nexport var findNodeAtLocation = parser.findNodeAtLocation;\n/**\n * Finds the most inner node at the given offset. If includeRightBound is set, also finds nodes that end at the given offset.\n */\nexport var findNodeAtOffset = parser.findNodeAtOffset;\n/**\n * Gets the JSON path of the given JSON DOM node\n */\nexport var getNodePath = parser.getNodePath;\n/**\n * Evaluates the JavaScript object of the given JSON DOM node\n */\nexport var getNodeValue = parser.getNodeValue;\n/**\n * Parses the given text and invokes the visitor functions for each object, array and literal reached.\n */\nexport var visit = parser.visit;\n/**\n * Takes JSON with JavaScript-style comments and remove\n * them. Optionally replaces every none-newline character\n * of comments with a replaceCharacter\n */\nexport var stripComments = parser.stripComments;\n/**\n * Computes the edits needed to format a JSON document.\n *\n * @param documentText The input text\n * @param range The range to format or `undefined` to format the full content\n * @param options The formatting options\n * @returns A list of edit operations describing the formatting changes to the original document. Edits can be either inserts, replacements or\n * removals of text segments. All offsets refer to the original state of the document. No two edits must change or remove the same range of\n * text in the original document. However, multiple edits can have\n * the same offset, for example multiple inserts, or an insert followed by a remove or replace. The order in the array defines which edit is applied first.\n * To apply edits to an input, you can use `applyEdits`\n */\nexport function format(documentText, range, options) {\n    return formatter.format(documentText, range, options);\n}\n/**\n * Computes the edits needed to modify a value in the JSON document.\n *\n * @param documentText The input text\n * @param path The path of the value to change. The path represents either to the document root, a property or an array item.\n * If the path points to an non-existing property or item, it will be created.\n * @param value The new value for the specified property or item. If the value is undefined,\n * the property or item will be removed.\n * @param options Options\n * @returns A list of edit operations describing the formatting changes to the original document. Edits can be either inserts, replacements or\n * removals of text segments. All offsets refer to the original state of the document. No two edits must change or remove the same range of\n * text in the original document. However, multiple edits can have\n * the same offset, for example multiple inserts, or an insert followed by a remove or replace. The order in the array defines which edit is applied first.\n * To apply edits to an input, you can use `applyEdits`\n */\nexport function modify(text, path, value, options) {\n    return edit.setProperty(text, path, value, options.formattingOptions, options.getInsertionIndex);\n}\n/**\n * Applies edits to a input string.\n */\nexport function applyEdits(text, edits) {\n    for (var i = edits.length - 1; i >= 0; i--) {\n        text = edit.applyEdit(text, edits[i]);\n    }\n    return text;\n}\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nimport * as json from './_deps/jsonc-parser/main.js';\r\nexport function createTokenizationSupport(supportComments) {\r\n    return {\r\n        getInitialState: function () { return new JSONState(null, null, false); },\r\n        tokenize: function (line, state, offsetDelta, stopAtOffset) { return tokenize(supportComments, line, state, offsetDelta, stopAtOffset); }\r\n    };\r\n}\r\nexport var TOKEN_DELIM_OBJECT = 'delimiter.bracket.json';\r\nexport var TOKEN_DELIM_ARRAY = 'delimiter.array.json';\r\nexport var TOKEN_DELIM_COLON = 'delimiter.colon.json';\r\nexport var TOKEN_DELIM_COMMA = 'delimiter.comma.json';\r\nexport var TOKEN_VALUE_BOOLEAN = 'keyword.json';\r\nexport var TOKEN_VALUE_NULL = 'keyword.json';\r\nexport var TOKEN_VALUE_STRING = 'string.value.json';\r\nexport var TOKEN_VALUE_NUMBER = 'number.json';\r\nexport var TOKEN_PROPERTY_NAME = 'string.key.json';\r\nexport var TOKEN_COMMENT_BLOCK = 'comment.block.json';\r\nexport var TOKEN_COMMENT_LINE = 'comment.line.json';\r\nvar JSONState = /** @class */ (function () {\r\n    function JSONState(state, scanError, lastWasColon) {\r\n        this._state = state;\r\n        this.scanError = scanError;\r\n        this.lastWasColon = lastWasColon;\r\n    }\r\n    JSONState.prototype.clone = function () {\r\n        return new JSONState(this._state, this.scanError, this.lastWasColon);\r\n    };\r\n    JSONState.prototype.equals = function (other) {\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        if (!other || !(other instanceof JSONState)) {\r\n            return false;\r\n        }\r\n        return this.scanError === other.scanError &&\r\n            this.lastWasColon === other.lastWasColon;\r\n    };\r\n    JSONState.prototype.getStateData = function () {\r\n        return this._state;\r\n    };\r\n    JSONState.prototype.setStateData = function (state) {\r\n        this._state = state;\r\n    };\r\n    return JSONState;\r\n}());\r\nfunction tokenize(comments, line, state, offsetDelta, stopAtOffset) {\r\n    if (offsetDelta === void 0) { offsetDelta = 0; }\r\n    // handle multiline strings and block comments\r\n    var numberOfInsertedCharacters = 0, adjustOffset = false;\r\n    switch (state.scanError) {\r\n        case 2 /* UnexpectedEndOfString */:\r\n            line = '\"' + line;\r\n            numberOfInsertedCharacters = 1;\r\n            break;\r\n        case 1 /* UnexpectedEndOfComment */:\r\n            line = '/*' + line;\r\n            numberOfInsertedCharacters = 2;\r\n            break;\r\n    }\r\n    var scanner = json.createScanner(line), kind, ret, lastWasColon = state.lastWasColon;\r\n    ret = {\r\n        tokens: [],\r\n        endState: state.clone()\r\n    };\r\n    while (true) {\r\n        var offset = offsetDelta + scanner.getPosition(), type = '';\r\n        kind = scanner.scan();\r\n        if (kind === 17 /* EOF */) {\r\n            break;\r\n        }\r\n        // Check that the scanner has advanced\r\n        if (offset === offsetDelta + scanner.getPosition()) {\r\n            throw new Error('Scanner did not advance, next 3 characters are: ' + line.substr(scanner.getPosition(), 3));\r\n        }\r\n        // In case we inserted /* or \" character, we need to\r\n        // adjust the offset of all tokens (except the first)\r\n        if (adjustOffset) {\r\n            offset -= numberOfInsertedCharacters;\r\n        }\r\n        adjustOffset = numberOfInsertedCharacters > 0;\r\n        // brackets and type\r\n        switch (kind) {\r\n            case 1 /* OpenBraceToken */:\r\n                type = TOKEN_DELIM_OBJECT;\r\n                lastWasColon = false;\r\n                break;\r\n            case 2 /* CloseBraceToken */:\r\n                type = TOKEN_DELIM_OBJECT;\r\n                lastWasColon = false;\r\n                break;\r\n            case 3 /* OpenBracketToken */:\r\n                type = TOKEN_DELIM_ARRAY;\r\n                lastWasColon = false;\r\n                break;\r\n            case 4 /* CloseBracketToken */:\r\n                type = TOKEN_DELIM_ARRAY;\r\n                lastWasColon = false;\r\n                break;\r\n            case 6 /* ColonToken */:\r\n                type = TOKEN_DELIM_COLON;\r\n                lastWasColon = true;\r\n                break;\r\n            case 5 /* CommaToken */:\r\n                type = TOKEN_DELIM_COMMA;\r\n                lastWasColon = false;\r\n                break;\r\n            case 8 /* TrueKeyword */:\r\n            case 9 /* FalseKeyword */:\r\n                type = TOKEN_VALUE_BOOLEAN;\r\n                lastWasColon = false;\r\n                break;\r\n            case 7 /* NullKeyword */:\r\n                type = TOKEN_VALUE_NULL;\r\n                lastWasColon = false;\r\n                break;\r\n            case 10 /* StringLiteral */:\r\n                type = lastWasColon ? TOKEN_VALUE_STRING : TOKEN_PROPERTY_NAME;\r\n                lastWasColon = false;\r\n                break;\r\n            case 11 /* NumericLiteral */:\r\n                type = TOKEN_VALUE_NUMBER;\r\n                lastWasColon = false;\r\n                break;\r\n        }\r\n        // comments, iff enabled\r\n        if (comments) {\r\n            switch (kind) {\r\n                case 12 /* LineCommentTrivia */:\r\n                    type = TOKEN_COMMENT_LINE;\r\n                    break;\r\n                case 13 /* BlockCommentTrivia */:\r\n                    type = TOKEN_COMMENT_BLOCK;\r\n                    break;\r\n            }\r\n        }\r\n        ret.endState = new JSONState(state.getStateData(), scanner.getTokenError(), lastWasColon);\r\n        ret.tokens.push({\r\n            startIndex: offset,\r\n            scopes: type\r\n        });\r\n    }\r\n    return ret;\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nimport { WorkerManager } from './workerManager.js';\r\nimport * as languageFeatures from './languageFeatures.js';\r\nimport { createTokenizationSupport } from './tokenization.js';\r\nexport function setupMode(defaults) {\r\n    var disposables = [];\r\n    var client = new WorkerManager(defaults);\r\n    disposables.push(client);\r\n    var worker = function () {\r\n        var uris = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            uris[_i] = arguments[_i];\r\n        }\r\n        return client.getLanguageServiceWorker.apply(client, uris);\r\n    };\r\n    var languageId = defaults.languageId;\r\n    disposables.push(monaco.languages.registerCompletionItemProvider(languageId, new languageFeatures.CompletionAdapter(worker)));\r\n    disposables.push(monaco.languages.registerHoverProvider(languageId, new languageFeatures.HoverAdapter(worker)));\r\n    disposables.push(monaco.languages.registerDocumentSymbolProvider(languageId, new languageFeatures.DocumentSymbolAdapter(worker)));\r\n    disposables.push(monaco.languages.registerDocumentFormattingEditProvider(languageId, new languageFeatures.DocumentFormattingEditProvider(worker)));\r\n    disposables.push(monaco.languages.registerDocumentRangeFormattingEditProvider(languageId, new languageFeatures.DocumentRangeFormattingEditProvider(worker)));\r\n    disposables.push(new languageFeatures.DiagnosticsAdapter(languageId, worker, defaults));\r\n    disposables.push(monaco.languages.setTokensProvider(languageId, createTokenizationSupport(true)));\r\n    disposables.push(monaco.languages.setLanguageConfiguration(languageId, richEditConfiguration));\r\n    disposables.push(monaco.languages.registerColorProvider(languageId, new languageFeatures.DocumentColorAdapter(worker)));\r\n    disposables.push(monaco.languages.registerFoldingRangeProvider(languageId, new languageFeatures.FoldingRangeAdapter(worker)));\r\n}\r\nvar richEditConfiguration = {\r\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\[\\{\\]\\}\\:\\\"\\,\\s]+)/g,\r\n    comments: {\r\n        lineComment: '//',\r\n        blockComment: ['/*', '*/']\r\n    },\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}', notIn: ['string'] },\r\n        { open: '[', close: ']', notIn: ['string'] },\r\n        { open: '\"', close: '\"', notIn: ['string'] }\r\n    ]\r\n};\r\n"]}