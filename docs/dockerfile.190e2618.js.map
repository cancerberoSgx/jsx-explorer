{"version":3,"sources":["../node_modules/monaco-editor/esm/vs/basic-languages/dockerfile/dockerfile.js"],"names":["conf","brackets","autoClosingPairs","open","close","surroundingPairs","language","defaultToken","tokenPostfix","instructions","instructionAfter","variableAfter","variable","tokenizer","root","include","token","next","arguments","cases","whitespace","comment","strings","stringBody","dblStringBody"],"mappings":";AAIA,aAsBO,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,SAAA,QAAA,UAAA,EArBA,IAAIA,EAAO,CACdC,SAAU,CACN,CAAC,IAAK,KACN,CAAC,IAAK,KACN,CAAC,IAAK,MAEVC,iBAAkB,CACd,CAAEC,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAMC,MAAO,MAEzBC,iBAAkB,CACd,CAAEF,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAMC,MAAO,OAGtB,QAAA,KAAA,EAAA,IAAIE,EAAW,CAClBC,aAAc,GACdC,aAAc,cACdC,aAAc,oHACdC,iBAAkB,UAClBC,cAAe,MACfC,SAAU,cACVC,UAAW,CACPC,KAAM,CACF,CAAEC,QAAS,eACX,CAAEA,QAAS,YACX,CAAC,2BAA4B,CAAC,UAAW,CAAEC,MAAO,GAAIC,KAAM,mBAC5D,CAAC,GAAI,UAAW,kBAEpBR,aAAc,CACV,CAAC,+BAAgC,CAAC,UAAW,GAAI,CAAEO,MAAO,WAAYC,KAAM,gBAC5E,CAAC,kBAAmB,UAAW,eAEnCC,UAAW,CACP,CAAEH,QAAS,eACX,CAAEA,QAAS,YACX,CAAC,cAAe,CACRI,MAAO,CACK,OAAA,CAAEH,MAAO,WAAYC,KAAM,WACvB,WAAA,cAGxB,CAAC,KAAM,CACCE,MAAO,CACK,OAAA,GACI,WAAA,MAGxB,CAAC,IAAK,CACEA,MAAO,CACK,OAAA,CAAEH,MAAO,GAAIC,KAAM,WACf,WAAA,OAK5BG,WAAY,CACR,CAAC,MAAO,CACAD,MAAO,CACK,OAAA,CAAEH,MAAO,GAAIC,KAAM,WACf,WAAA,OAI5BI,QAAS,CACL,CAAC,UAAW,UAAW,YAG3BC,QAAS,CACL,CAAC,KAAM,SAAU,WACjB,CAAC,IAAK,SAAU,eAChB,CAAC,KAAM,SAAU,WACjB,CAAC,IAAK,SAAU,mBAEpBC,WAAY,CACR,CAAC,WAAY,CACLJ,MAAO,CACK,OAAA,CAAEH,MAAO,SAAUC,KAAM,WACrB,WAAA,YAGxB,CAAC,MAAO,iBACR,CAAC,KAAM,SAAU,WACjB,CAAC,IAAK,SAAU,QAChB,CAAC,cAAe,YAChB,CAAC,MAAO,UACR,CAAC,IAAK,SAAU,YAEpBO,cAAe,CACX,CAAC,WAAY,CACLL,MAAO,CACK,OAAA,CAAEH,MAAO,SAAUC,KAAM,WACrB,WAAA,YAGxB,CAAC,MAAO,iBACR,CAAC,KAAM,SAAU,WACjB,CAAC,IAAK,SAAU,QAChB,CAAC,cAAe,YAChB,CAAC,MAAO,UACR,CAAC,IAAK,SAAU,cArFrB,QAAA,SAAA","file":"dockerfile.190e2618.js","sourceRoot":"../src","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nexport var conf = {\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: '\\'', close: '\\'' },\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: '\\'', close: '\\'' },\r\n    ]\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '.dockerfile',\r\n    instructions: /FROM|MAINTAINER|RUN|EXPOSE|ENV|ADD|ARG|VOLUME|LABEL|USER|WORKDIR|COPY|CMD|STOPSIGNAL|SHELL|HEALTHCHECK|ENTRYPOINT/,\r\n    instructionAfter: /ONBUILD/,\r\n    variableAfter: /ENV/,\r\n    variable: /\\${?[\\w]+}?/,\r\n    tokenizer: {\r\n        root: [\r\n            { include: '@whitespace' },\r\n            { include: '@comment' },\r\n            [/(@instructionAfter)(\\s+)/, ['keyword', { token: '', next: '@instructions' }]],\r\n            ['', 'keyword', '@instructions']\r\n        ],\r\n        instructions: [\r\n            [/(@variableAfter)(\\s+)([\\w]+)/, ['keyword', '', { token: 'variable', next: '@arguments' }]],\r\n            [/(@instructions)/, 'keyword', '@arguments']\r\n        ],\r\n        arguments: [\r\n            { include: '@whitespace' },\r\n            { include: '@strings' },\r\n            [/(@variable)/, {\r\n                    cases: {\r\n                        '@eos': { token: 'variable', next: '@popall' },\r\n                        '@default': 'variable'\r\n                    }\r\n                }],\r\n            [/\\\\/, {\r\n                    cases: {\r\n                        '@eos': '',\r\n                        '@default': ''\r\n                    }\r\n                }],\r\n            [/./, {\r\n                    cases: {\r\n                        '@eos': { token: '', next: '@popall' },\r\n                        '@default': ''\r\n                    }\r\n                }],\r\n        ],\r\n        // Deal with white space, including comments\r\n        whitespace: [\r\n            [/\\s+/, {\r\n                    cases: {\r\n                        '@eos': { token: '', next: '@popall' },\r\n                        '@default': ''\r\n                    }\r\n                }],\r\n        ],\r\n        comment: [\r\n            [/(^#.*$)/, 'comment', '@popall']\r\n        ],\r\n        // Recognize strings, including those broken across lines with \\ (but not without)\r\n        strings: [\r\n            [/'$/, 'string', '@popall'],\r\n            [/'/, 'string', '@stringBody'],\r\n            [/\"$/, 'string', '@popall'],\r\n            [/\"/, 'string', '@dblStringBody']\r\n        ],\r\n        stringBody: [\r\n            [/[^\\\\\\$']/, {\r\n                    cases: {\r\n                        '@eos': { token: 'string', next: '@popall' },\r\n                        '@default': 'string'\r\n                    }\r\n                }],\r\n            [/\\\\./, 'string.escape'],\r\n            [/'$/, 'string', '@popall'],\r\n            [/'/, 'string', '@pop'],\r\n            [/(@variable)/, 'variable'],\r\n            [/\\\\$/, 'string'],\r\n            [/$/, 'string', '@popall']\r\n        ],\r\n        dblStringBody: [\r\n            [/[^\\\\\\$\"]/, {\r\n                    cases: {\r\n                        '@eos': { token: 'string', next: '@popall' },\r\n                        '@default': 'string'\r\n                    }\r\n                }],\r\n            [/\\\\./, 'string.escape'],\r\n            [/\"$/, 'string', '@popall'],\r\n            [/\"/, 'string', '@pop'],\r\n            [/(@variable)/, 'variable'],\r\n            [/\\\\$/, 'string'],\r\n            [/$/, 'string', '@popall']\r\n        ]\r\n    }\r\n};\r\n"]}